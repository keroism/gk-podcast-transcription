1
00:00:07,900 --> 00:00:09,927
Speaker 1: It's Monday, December 27th, 2021.

2
00:00:09,927 --> 00:00:10,229
Speaker 1: I'm Rym.

3
00:00:14,025 --> 00:00:14,479
Speaker 0: I'm Scott.

4
00:00:14,840 --> 00:00:16,268
Speaker 1: And this is Geek Nights Tonight.

5
00:00:16,288 --> 00:00:18,580
Speaker 1: We are talking about software libraries.

6
00:00:19,680 --> 00:00:20,618
Speaker 0: Let's do this.

7
00:00:21,561 --> 00:00:24,660
Speaker 1: So as many of you know, I do have a car.

8
00:00:25,380 --> 00:00:30,920
Speaker 1: We really only use it for like the rare kinds of trips where there's no other way to get anywhere.

9
00:00:31,461 --> 00:00:35,760
Speaker 1: And primarily it's just to not have to travel around other people if we have to travel.

10
00:00:35,840 --> 00:00:39,220
Speaker 1: Like not taking an Amtrak or in COVID times for obvious reasons.

11
00:00:39,760 --> 00:00:53,260
Speaker 1: But it's not that I didn't expect this, but I guess it's been so long since I had a car that I had forgotten internally how much of a pain in the ass cars can be.

12
00:00:54,244 --> 00:00:54,890
Speaker 0: You don't say.

13
00:00:54,910 --> 00:00:55,839
Speaker 0: I haven't forgotten.

14
00:00:58,042 --> 00:01:02,920
Speaker 0: I'm constantly seeing other people suffer under the yoke of their car and laughing at them.

15
00:01:03,020 --> 00:01:03,105
Speaker 0: Yeah.

16
00:01:04,080 --> 00:01:05,160
Speaker 0: It's a daily occurrence.

17
00:01:06,000 --> 00:01:11,780
Speaker 1: But it was a few basic things like the cars that I had, because it's an older car, you know, it was basically a gift to get through COVID with.

18
00:01:12,422 --> 00:01:14,360
Speaker 1: And it's older, so it's had a few problems.

19
00:01:14,821 --> 00:01:21,300
Speaker 1: But it had a bunch of minor problems that all happened at the same time, which actually made diagnosing them difficult.

20
00:01:22,140 --> 00:01:28,020
Speaker 1: Coupled with the fact that cars are different now from the last time I fucked around under the hood of a car.

21
00:01:28,200 --> 00:01:28,987
Speaker 1: My last car was what?

22
00:01:29,249 --> 00:01:29,653
Speaker 1: That '98 Sunfire.

23
00:01:31,682 --> 00:01:34,138
Speaker 0: So, I mean, my last car was an '06, right?

24
00:01:34,600 --> 00:01:39,740
Speaker 0: So that was 15 years ago and I only had the car for like three or four years.

25
00:01:39,940 --> 00:01:42,120
Speaker 0: I completely paid it off and sold it to a friend.

26
00:01:42,300 --> 00:01:43,840
Speaker 1: My last car was from the last millennium.

27
00:01:44,741 --> 00:01:44,941
Speaker 0: Right.

28
00:01:45,141 --> 00:01:54,600
Speaker 0: But that car that I bought in '06, right, to get to hook up my iPod slash later iPhone to it.

29
00:01:54,806 --> 00:01:54,998
Speaker 0: Yeah.

30
00:01:55,400 --> 00:01:55,600
Speaker 0: Right.

31
00:01:56,001 --> 00:02:08,320
Speaker 0: I had to get a special thing that connected to the back of the radio to trick the radio into thinking my iPod slash iPhone was actually an external CD changer.

32
00:02:08,562 --> 00:02:08,894
Speaker 1: Oh, yeah.

33
00:02:09,401 --> 00:02:15,597
Speaker 0: Or there wasn't an aux hole, so to get an aux hole, I would have had to replace the entire radio, right?

34
00:02:17,081 --> 00:02:19,679
Speaker 0: Or I could have used an FM tuner thing.

35
00:02:20,101 --> 00:02:29,560
Speaker 1: I used to use the FM tuner, but I had to remove the antenna from the outside of my car so it wouldn't pick up the stray radio from the fact that there's a million radio stations near New York.

36
00:02:29,560 --> 00:02:48,870
Speaker 0: If you buy, like, even, I guess maybe not the cheapest car nowadays, but even really cheap cars today, if you buy a new car, a 2022 model, if you can find one, it's going to have a screen built in and Bluetooth and an aux hole and a USB hole standard.

37
00:02:49,390 --> 00:02:49,622
Speaker 0: Right.

38
00:02:50,811 --> 00:02:51,900
Speaker 1: I mean, this car is a 2012 Chevy.

39
00:02:53,790 --> 00:02:59,090
Speaker 1: It's got, like, the basic radio, but even by 2012, it has an aux hole, which is really all I need.

40
00:02:59,590 --> 00:03:00,527
Speaker 0: It has a USB hole, too.

41
00:03:01,030 --> 00:03:01,184
Speaker 1: Yep.

42
00:03:02,351 --> 00:03:07,130
Speaker 1: It has a USB that doesn't do, like, it doesn't look like it can do anything with that USB except charge stuff.

43
00:03:07,790 --> 00:03:14,070
Speaker 0: And a lot of times, in a lot of cars, the USBs are set up to be, like, you know, iPod iPhone only.

44
00:03:14,230 --> 00:03:16,870
Speaker 0: There's, like, a special interface protocol.

45
00:03:16,910 --> 00:03:21,570
Speaker 1: iPhone seems to only just provide, like, 1.5, like, the minimum spec of USB power.

46
00:03:21,650 --> 00:03:22,350
Speaker 1: It's basically worthless.

47
00:03:23,251 --> 00:03:26,890
Speaker 1: But the other funny thing about it, it has Bluetooth, and you can, like, sync a phone to it.

48
00:03:27,474 --> 00:03:28,830
Speaker 1: It can't play music.

49
00:03:28,991 --> 00:03:30,690
Speaker 1: It can only do phone calling.

50
00:03:33,791 --> 00:03:40,310
Speaker 0: They basically just have a Bluetooth headset integrated, but they don't have the, you know, because there's all the different Bluetooth protocols, right?

51
00:03:40,370 --> 00:03:44,830
Speaker 0: So I guess they don't have the A2D, whatever they're using for headphones these days.

52
00:03:45,275 --> 00:03:45,588
Speaker 0: I forget.

53
00:03:45,811 --> 00:03:46,031
Speaker 0: Yep.

54
00:03:46,272 --> 00:03:51,730
Speaker 1: So of all the things that happened, I'm not going to do this whole show on my car show, but it had an oil leak, because it's an old car.

55
00:03:51,950 --> 00:03:57,670
Speaker 1: So I got the, like, the gasket on the valve cover, like, rebuilt, and then it still had an oil leak.

56
00:03:57,832 --> 00:03:59,049
Speaker 1: And get this, you know what failed?

57
00:03:59,690 --> 00:04:00,996
Speaker 1: The gas cap, or not?

58
00:04:01,016 --> 00:04:04,330
Speaker 1: the gas cap, the oil pan cap, like, the cap where you refill oil in.

59
00:04:04,770 --> 00:04:12,890
Speaker 1: The cap that was brand new from the manufacturer had a defect in the seal and was just spurting oil out, but only when the car was running at high speed.

60
00:04:14,031 --> 00:04:15,270
Speaker 1: So that was annoying to troubleshoot.

61
00:04:15,290 --> 00:04:18,849
Speaker 0: It probably had to do with, it probably heated up and then expanded and then spurted.

62
00:04:19,089 --> 00:04:19,250
Speaker 1: Yep.

63
00:04:19,271 --> 00:04:23,250
Speaker 1: So I got a warranty recall, like, replacement on the cap to my oil.

64
00:04:24,010 --> 00:04:31,130
Speaker 1: But all of that was messed, so I take the car after I get all that fixed to get an oil change, like, just refresh the oil because I had that problem.

65
00:04:31,991 --> 00:04:39,410
Speaker 1: And then I'm sitting in front of some, like, jiffy lube, and the door opens for me to go in, I go to start my car, nothing.

66
00:04:40,070 --> 00:04:43,389
Speaker 1: The battery had died independently of all that.

67
00:04:44,331 --> 00:04:45,370
Speaker 0: That's how it goes.

68
00:04:45,650 --> 00:04:46,470
Speaker 1: Yeah, original battery.

69
00:04:47,231 --> 00:04:49,917
Speaker 1: But so the whole reason I'm leading to that story, cars have changed.

70
00:04:49,977 --> 00:04:55,550
Speaker 1: because this car, I think, okay, I will just get that, I'll jump the car, like, that's easy.

71
00:04:56,371 --> 00:04:59,490
Speaker 1: And then I'll drive the car around or idle it just to get the battery charged up.

72
00:04:59,570 --> 00:05:02,710
Speaker 1: And then I'll go to, like, some auto parts store, just buy a new battery and put it in.

73
00:05:03,372 --> 00:05:06,604
Speaker 1: Like, I can change a battery with my knowledge of cars.

74
00:05:06,825 --> 00:05:08,170
Speaker 1: How much has changed in 20 years?

75
00:05:08,671 --> 00:05:14,910
Speaker 1: So I go, and I go and I get a new battery, like, I'm outside an auto zone, and the guy's like, you want me to install it for you?

76
00:05:14,930 --> 00:05:15,615
Speaker 1: And I'm just like, you know what?

77
00:05:15,635 --> 00:05:16,581
Speaker 1: Yeah, let's just do it together.

78
00:05:16,601 --> 00:05:17,024
Speaker 1: Who cares?

79
00:05:17,064 --> 00:05:17,829
Speaker 1: This is supposed to be easy.

80
00:05:18,371 --> 00:05:22,180
Speaker 1: We're looking at it, and there's this giant, like, complicated bus bar thing.

81
00:05:22,541 --> 00:05:26,150
Speaker 1: that's, like, clamped to the battery, and it's something I'd never seen before.

82
00:05:26,230 --> 00:05:27,296
Speaker 1: It wasn't just two clamps.

83
00:05:27,759 --> 00:05:29,650
Speaker 1: It was a bunch of nonsense around the battery.

84
00:05:30,750 --> 00:05:30,841
Speaker 0: Yeah.

85
00:05:32,252 --> 00:05:36,250
Speaker 1: So it took about 10 minutes to replace that battery instead of the one minute that I expected.

86
00:05:36,830 --> 00:05:41,190
Speaker 1: And I think I have now solved literally every problem with this car, the last of which...

87
00:05:41,250 --> 00:05:43,010
Speaker 0: What about the unbalanced front right tire?

88
00:05:43,290 --> 00:05:44,396
Speaker 1: Oh, that's trivial to fix.

89
00:05:44,436 --> 00:05:47,069
Speaker 1: I just took it in and said, hey, balance my tires for free, and they just did it.

90
00:05:47,990 --> 00:05:48,246
Speaker 0: Okay, good.

91
00:05:48,590 --> 00:05:52,670
Speaker 1: But one thing that happened during all of this is the car got an overheat warning.

92
00:05:53,750 --> 00:05:54,732
Speaker 1: That's a scary warning.

93
00:05:54,772 --> 00:06:04,750
Speaker 1: But not that, like, the temperature's high, but, like, the temperature gets so high that the engine goes into the firing every other cylinder mode to, like, save on damage to the engine so you can pull over.

94
00:06:05,510 --> 00:06:06,293
Speaker 1: So I pull over.

95
00:06:07,076 --> 00:06:08,341
Speaker 1: Car's not that hot.

96
00:06:09,003 --> 00:06:10,830
Speaker 1: Like, they're, like, I'm under the hood.

97
00:06:11,510 --> 00:06:12,032
Speaker 1: I thought that.

98
00:06:12,132 --> 00:06:14,980
Speaker 1: So, you know what was causing the sensor to malfunction?

99
00:06:15,321 --> 00:06:18,510
Speaker 1: The fact that the battery was on its last legs and was over-voltage.

100
00:06:19,860 --> 00:06:20,109
Speaker 1: Mm-hmm.

101
00:06:20,290 --> 00:06:21,816
Speaker 1: Replacing the battery fixed that.

102
00:06:22,097 --> 00:06:23,823
Speaker 1: Fixing the cap fixed the oil thing.

103
00:06:23,863 --> 00:06:24,645
Speaker 1: The car's now fine.

104
00:06:25,267 --> 00:06:25,990
Speaker 1: Fucking cars.

105
00:06:27,050 --> 00:06:27,232
Speaker 0: Yeah.

106
00:06:27,474 --> 00:06:29,010
Speaker 0: You know, bicycles don't have that problem.

107
00:06:29,530 --> 00:06:29,670
Speaker 1: Yeah.

108
00:06:29,891 --> 00:06:32,400
Speaker 1: When a bicycle fails, it's very much like, what failed?

109
00:06:32,500 --> 00:06:32,881
Speaker 1: Oh, look.

110
00:06:33,764 --> 00:06:35,510
Speaker 1: This exact thing that I can see with my eyes.

111
00:06:35,710 --> 00:06:36,814
Speaker 0: It's only four parts.

112
00:06:36,854 --> 00:06:40,508
Speaker 0: There's a gear, a chain, a wheel.

113
00:06:41,990 --> 00:06:48,090
Speaker 1: Mountain bikes with full, like, pneumatic suspensions and pneumatic gear changing could have odd problems, but...

114
00:06:48,270 --> 00:06:53,050
Speaker 0: But the point is, a lot, you know, there could always be something, you know, off, right, with a bicycle.

115
00:06:53,251 --> 00:06:59,050
Speaker 0: But the parts that are required to function so that you can ride it and move are very, very few.

116
00:06:59,130 --> 00:07:02,230
Speaker 0: If the other parts fail, it's like, eh, I'm moving, right?

117
00:07:02,411 --> 00:07:04,642
Speaker 1: No, I must say, a 2012-era car at least still is.

118
00:07:06,510 --> 00:07:14,970
Speaker 1: Most of the things that can go wrong with it can be fixed by me with my basic knowledge of cars, looking under the hood, looking at YouTube videos, reading the manual.

119
00:07:15,910 --> 00:07:18,190
Speaker 0: Well, I mean, yeah, the only time you're gonna run into trouble...

120
00:07:18,350 --> 00:07:24,570
Speaker 1: I'm slower at it, and I also don't have any way to, like, figure out what's wrong if I can't see a problem.

121
00:07:24,951 --> 00:07:29,848
Speaker 1: Like, I open the hood, I see oil everywhere, and I'm like, well, I know what the problem is.

122
00:07:29,868 --> 00:07:30,430
Speaker 1: I don't know what's leaking.

123
00:07:30,430 --> 00:07:33,299
Speaker 0: Well, you're gonna run into trouble if you have to do anything.

124
00:07:33,319 --> 00:07:36,590
Speaker 0: that is, you know, requires tools you don't have.

125
00:07:36,810 --> 00:07:38,488
Speaker 1: Yep, requires lifting the car up.

126
00:07:39,230 --> 00:07:42,041
Speaker 0: Yeah, requires something like opening the transmission, right?

127
00:07:42,081 --> 00:07:44,270
Speaker 0: Take it out, putting it back in or rebuilding it, you know.

128
00:07:46,051 --> 00:07:47,718
Speaker 0: It's like the same thing with a computer, right?

129
00:07:47,778 --> 00:07:50,770
Speaker 0: It's like, oh, I can replace my video card, no problem.

130
00:07:51,313 --> 00:07:52,670
Speaker 1: Well, you're not gonna fix your video card.

131
00:07:53,030 --> 00:07:53,191
Speaker 0: No.

132
00:07:53,853 --> 00:07:55,338
Speaker 0: Could I replace a transmission?

133
00:07:55,759 --> 00:07:58,449
Speaker 0: Probably not because of the lifting and all that, right?

134
00:07:59,410 --> 00:08:03,362
Speaker 0: But, you know, opening the transmission, that's like fixing the video card itself.

135
00:08:03,463 --> 00:08:04,345
Speaker 0: It's out of the question.

136
00:08:04,726 --> 00:08:05,850
Speaker 0: Only a professional can do it.

137
00:08:05,910 --> 00:08:16,550
Speaker 0: But to the car's credit, right, if you go to, like, a professional computer repair place, if your video card is broken, they probably can't fix it.

138
00:08:16,971 --> 00:08:25,270
Speaker 0: But if you go to a transmission expert, someone whose only job is to fix transmissions, like in a recent thing of the day, someone recent, they actually can.

139
00:08:25,330 --> 00:08:32,150
Speaker 0: There are people who can open a transmission, take it apart piece by piece, and reassemble it and make it better than it was when it was new.

140
00:08:32,270 --> 00:08:33,333
Speaker 0: Those people exist.

141
00:08:33,414 --> 00:08:37,510
Speaker 0: So give a car a credit on repairability there.

142
00:08:38,090 --> 00:08:49,490
Speaker 1: Well, that gets into a broader topic we've brought on off and on, on how older technology implemented more widely and more reliably and with more care would do more for the world than most bleeding edge technology we have today.

143
00:08:51,610 --> 00:08:52,896
Speaker 1: Simple, effective systems work.

144
00:08:53,257 --> 00:08:56,230
Speaker 1: The problem with cars is their impact on society at scale.

145
00:08:56,330 --> 00:08:58,173
Speaker 0: It's also just, you know, use cases, right?

146
00:08:58,213 --> 00:09:00,718
Speaker 0: Especially when it comes to something like computer, right?

147
00:09:00,758 --> 00:09:08,050
Speaker 0: It's like, what's the fundamental difference between a brand new computer today, if you could get one, and a brand new computer 10 years ago?

148
00:09:08,230 --> 00:09:10,274
Speaker 0: It's pretty much just speed, right?

149
00:09:10,514 --> 00:09:13,039
Speaker 0: There isn't really any features that are different.

150
00:09:13,139 --> 00:09:18,909
Speaker 0: So as long as your use case doesn't demand that speed, it's like, what do you need the newer one for?

151
00:09:19,630 --> 00:09:22,935
Speaker 0: It's like just having one is what's necessary, right?

152
00:09:24,297 --> 00:09:34,150
Speaker 0: So giving people who have the lower end use case, who don't have a computer, getting them any computer is better than, you know, getting them a faster computer.

153
00:09:35,031 --> 00:09:35,714
Speaker 1: It's easy to forget.

154
00:09:35,734 --> 00:09:38,424
Speaker 1: There's just an article talking about how powerful old mainframes were.

155
00:09:38,444 --> 00:09:39,850
Speaker 1: That was a fun read.

156
00:09:39,912 --> 00:09:40,650
Speaker 0: Not powerful.

157
00:09:41,190 --> 00:09:41,354
Speaker 1: Yep.

158
00:09:41,619 --> 00:09:42,110
Speaker 1: What did they say?

159
00:09:42,632 --> 00:09:44,449
Speaker 0: Your phone is like a thousand mainframes.

160
00:09:44,811 --> 00:09:49,650
Speaker 1: If you have a modern laptop, it's like 21 million supercomputers from that era.

161
00:09:50,530 --> 00:09:51,268
Speaker 0: Yeah, something like that.

162
00:09:51,690 --> 00:09:55,502
Speaker 1: But basically, I forgot where I was going with that.

163
00:09:55,542 --> 00:09:58,210
Speaker 1: There's big news, so we should probably jump into the news.

164
00:09:59,630 --> 00:10:08,830
Speaker 0: Okay, so Amazon Web Services, which runs most of the web pages on the internets and a lot of other things, they had a lot of outages since we last did a Geek Nights episode.

165
00:10:08,830 --> 00:10:12,985
Speaker 1: Yeah, like East went down for a while and then later like West went down.

166
00:10:13,045 --> 00:10:13,486
Speaker 1: Is that clear?

167
00:10:13,506 --> 00:10:14,490
Speaker 1: if that was the same reason?

168
00:10:15,770 --> 00:10:17,255
Speaker 0: So there's a lot of issues here.

169
00:10:17,496 --> 00:10:21,670
Speaker 0: One, something we've complained about I feel like a lot is that, you know, they have a status page.

170
00:10:22,130 --> 00:10:24,615
Speaker 0: Amazon is, you know, a lot of companies are bad about this.

171
00:10:24,715 --> 00:10:31,610
Speaker 0: Amazon's not alone, but they are notoriously and specifically bad about, A, not updating the status page quickly.

172
00:10:31,771 --> 00:10:35,410
Speaker 0: Everyone knows Oz is down and you go to that status page and it's all green lights.

173
00:10:35,611 --> 00:10:39,490
Speaker 1: Or it'll turn the yellow light of we might be having an outage.

174
00:10:39,971 --> 00:10:40,312
Speaker 0: Right.

175
00:10:40,332 --> 00:10:46,010
Speaker 0: Two, you eventually, you know, they do update it and there'll be like a couple yellow lights on a couple items.

176
00:10:46,130 --> 00:10:54,030
Speaker 0: But it's like, you know for a fact that is actually, if that was honest, it would be red lights on like a whole set of items, right?

177
00:10:54,170 --> 00:10:57,602
Speaker 0: So they don't update it quickly and they're dishonest when they do update it.

178
00:10:57,622 --> 00:10:59,730
Speaker 0: I don't know how they've gotten away with it for so long.

179
00:10:59,810 --> 00:11:02,118
Speaker 0: I don't know why they even bother lying.

180
00:11:02,178 --> 00:11:03,984
Speaker 0: Is it for SLA reasons?

181
00:11:04,044 --> 00:11:05,990
Speaker 0: they can lie and say that they met your SLA?

182
00:11:06,230 --> 00:11:07,664
Speaker 1: I mean, that might literally just be it.

183
00:11:09,130 --> 00:11:09,816
Speaker 0: It could just be it.

184
00:11:10,663 --> 00:11:11,469
Speaker 0: So that's one thing.

185
00:11:11,750 --> 00:11:18,690
Speaker 1: Or they have a very pedantic and they have a really, really fiddly definition they use internally to be able to avoid those SLA violations.

186
00:11:19,052 --> 00:11:21,569
Speaker 1: And that's the logic they use to determine the color of the thing.

187
00:11:22,991 --> 00:11:23,312
Speaker 0: Could be.

188
00:11:23,533 --> 00:11:29,650
Speaker 0: But they are also very not transparent, opaque about any sort of thing like that.

189
00:11:29,851 --> 00:11:30,430
Speaker 0: So there's no explanation.

190
00:11:30,971 --> 00:11:31,750
Speaker 1: I don't want to say credit.

191
00:11:32,250 --> 00:11:35,249
Speaker 0: The reports about what went wrong are severely lacking in detail.

192
00:11:35,350 --> 00:11:38,850
Speaker 1: Well, but to their, I don't want to say credit, nor do I want to defend them.

193
00:11:38,970 --> 00:11:47,790
Speaker 1: But for an organization that's so relied upon, they're not going to lose any business by not exposing their own internal problems.

194
00:11:48,071 --> 00:11:52,250
Speaker 1: They have no incentive to tell anyone shit because nobody's going to migrate off of Amazon.

195
00:11:54,330 --> 00:11:55,468
Speaker 0: Again, you know, there's not much choice.

196
00:11:55,850 --> 00:11:56,730
Speaker 1: What are you going to use, Azure?

197
00:11:57,210 --> 00:12:03,670
Speaker 0: Again, it's brought up all the same discussions about, is it a good idea for all of us to be hosting all our shit in one place?

198
00:12:05,071 --> 00:12:05,211
Speaker 0: Right.

199
00:12:05,532 --> 00:12:14,270
Speaker 0: And the problem is, again, a) ISPs don't give normal people reliable static IP addresses so that we can't host shit in our homes.

200
00:12:16,373 --> 00:12:18,009
Speaker 0: So you need to host it somewhere else.

201
00:12:18,510 --> 00:12:27,630
Speaker 0: And then if you are hosting it somewhere else, right, there are many places to choose from that will host, you know, virtual servers or real servers for you.

202
00:12:28,171 --> 00:12:34,010
Speaker 0: But if you send real servers that you own to a data center, that's a lot of work and a lot of costs.

203
00:12:34,190 --> 00:12:35,769
Speaker 0: You want it and a lot of.

204
00:12:35,970 --> 00:12:36,175
Speaker 0: All right.

205
00:12:36,195 --> 00:12:36,789
Speaker 0: So you want to use.

206
00:12:36,950 --> 00:12:37,937
Speaker 0: Well, it's upfront costs.

207
00:12:37,978 --> 00:12:39,670
Speaker 0: actually saves you money in the long run.

208
00:12:39,750 --> 00:12:40,271
Speaker 0: If you can do.

209
00:12:40,392 --> 00:12:48,950
Speaker 1: I have found in my career that not to be true because hardware refresh cycles end up actually just costing more just with your own hardware.

210
00:12:49,170 --> 00:12:50,730
Speaker 0: But it depends on what you're doing, right?

211
00:12:50,930 --> 00:12:53,070
Speaker 0: The Geek Night's website never needs to refresh the hardware.

212
00:12:53,151 --> 00:12:55,630
Speaker 0: I mean, we can handle the same hardware we started.

213
00:12:55,910 --> 00:12:57,168
Speaker 1: We need to handle on a daily basis.

214
00:12:58,726 --> 00:12:58,830
Speaker 0: Right.

215
00:13:00,611 --> 00:13:16,150
Speaker 0: So then it's like, well, if one place hosts everything that is because of economies of scale, right, that place, if he gets all the money and investment, it can do it better and more efficiently and have lower prices and better service than a lots of competitors.

216
00:13:16,672 --> 00:13:20,750
Speaker 0: But and then you get your all everyone's eggs are all in the same one basket.

217
00:13:20,890 --> 00:13:31,990
Speaker 0: So Amazon does offer even if you host everything on Amazon Web Services, they let you for just about everything, run your services multi zoned.

218
00:13:32,333 --> 00:13:33,870
Speaker 0: So they have zones and regions, right?

219
00:13:34,071 --> 00:13:35,361
Speaker 0: A region will be like U.S.

220
00:13:35,482 --> 00:13:36,570
Speaker 0: East like Virginia.

221
00:13:36,850 --> 00:13:43,970
Speaker 0: There's a whole region of data centers and then the zones which are supposed to be separate parts of the region.

222
00:13:44,352 --> 00:13:47,809
Speaker 0: So in theory, if one zone goes down, the other zones should be up.

223
00:13:48,412 --> 00:13:53,470
Speaker 1: So unless there's a region, which could happen like they don't even pretend that couldn't happen, which did happen.

224
00:13:53,651 --> 00:13:53,853
Speaker 0: Right.

225
00:13:54,054 --> 00:13:55,950
Speaker 0: But you can also do multi region hosting.

226
00:13:56,030 --> 00:13:56,191
Speaker 0: Right.

227
00:13:56,211 --> 00:13:58,339
Speaker 0: You can host your service in U.S.

228
00:13:58,399 --> 00:13:59,203
Speaker 0: West and U.S.

229
00:13:59,363 --> 00:14:01,110
Speaker 0: East and Asia Pacific.

230
00:14:01,451 --> 00:14:03,238
Speaker 0: And, you know, all that you can put.

231
00:14:03,318 --> 00:14:06,410
Speaker 0: you can run your servers in multiple locations around the world.

232
00:14:06,911 --> 00:14:15,550
Speaker 0: And that way, if some of them go down, you're still up because some whoever's visiting your service is all your users are going to just hit a different region.

233
00:14:15,550 --> 00:14:17,957
Speaker 1: But that can affect double your cost.

234
00:14:17,978 --> 00:14:21,950
Speaker 1: But more importantly, it makes a much more complex environment for whatever it is you're running.

235
00:14:23,630 --> 00:14:23,971
Speaker 0: Exactly.

236
00:14:24,031 --> 00:14:32,510
Speaker 0: So it's A, if you want to do that, you have to pay more money because you're paying for more servers, even if they're like cold spares or whatever, you're still paying for them.

237
00:14:33,391 --> 00:14:36,400
Speaker 0: And B, to set that up is difficult.

238
00:14:36,440 --> 00:14:38,265
Speaker 0: It's not like a one button push.

239
00:14:38,405 --> 00:14:39,789
Speaker 0: It just works kind of deal.

240
00:14:40,350 --> 00:14:41,452
Speaker 0: Right.

241
00:14:41,792 --> 00:14:48,402
Speaker 0: You know, and I think that really that would actually solve all because even these recent AUS outages, U.S.

242
00:14:48,522 --> 00:14:48,962
Speaker 0: East, U.S.

243
00:14:49,003 --> 00:14:52,447
Speaker 0: West, anyone who had a multi region set up was fine because they're.

244
00:14:52,768 --> 00:14:54,350
Speaker 0: they didn't take out all the regions at once.

245
00:14:54,430 --> 00:14:55,111
Speaker 0: That's never happened.

246
00:14:55,492 --> 00:14:56,574
Speaker 0: And it probably never will happen.

247
00:14:57,135 --> 00:15:04,990
Speaker 0: So I really think what they should be focusing on is regardless of the cause of these problems that have been happening recently and fixing those.

248
00:15:05,490 --> 00:15:07,200
Speaker 1: That's an operational task.

249
00:15:07,260 --> 00:15:08,990
Speaker 1: That's not a strategic problem.

250
00:15:09,831 --> 00:15:20,630
Speaker 0: Yeah, especially the east region, which is has most of the problems because it has most of the usage and also has the oldest is the oldest region.

251
00:15:20,911 --> 00:15:23,159
Speaker 0: So it's got a lot of the cruft behind the scenes.

252
00:15:23,460 --> 00:15:26,229
Speaker 0: The other regions that have been created more recently don't have.

253
00:15:27,811 --> 00:15:35,730
Speaker 0: But it's like just make the multi region thing, you know, for all the different services, more of a push button deal.

254
00:15:35,970 --> 00:15:46,270
Speaker 0: Even if someone just sets up something real simple, make it so that they can literally push a button and say, look, take my whole account, everything I have running in the account and just multi region it.

255
00:15:46,570 --> 00:15:48,814
Speaker 1: It can even be a really naive thing.

256
00:15:48,874 --> 00:15:53,440
Speaker 1: Like if you set this up, it will stun it or like shut down your anything.

257
00:15:53,460 --> 00:15:59,890
Speaker 1: you've got going on the east and spin up replicas from the last good state in the other region.

258
00:16:00,150 --> 00:16:00,270
Speaker 0: Right.

259
00:16:00,411 --> 00:16:11,870
Speaker 0: As long as you're using the route 53, which is Amazon's DNS server, it should be able to just be like, look, you're running a web, some Internet service where people are visiting you via an IP address on DNS.

260
00:16:12,431 --> 00:16:14,777
Speaker 0: So what we can do is just push button.

261
00:16:14,978 --> 00:16:17,765
Speaker 0: We'll copy everything in your account to a different region.

262
00:16:18,105 --> 00:16:19,930
Speaker 0: It'll always be identical to this account.

263
00:16:20,110 --> 00:16:27,490
Speaker 0: All the will sync the hard drives, just, you know, whatever data is being stored in your database will just be synced as much as we can at all times.

264
00:16:28,051 --> 00:16:32,724
Speaker 0: And in case of an outage, we'll just move your DNS and turn on those servers and turn off these servers.

265
00:16:33,005 --> 00:16:34,910
Speaker 0: And then, you know, no one needs to configure that.

266
00:16:34,990 --> 00:16:40,688
Speaker 0: You could just have that automated for any conceivable setup if you copy the person's entire account.

267
00:16:41,149 --> 00:16:41,330
Speaker 0: Right.

268
00:16:41,732 --> 00:16:42,809
Speaker 0: Every single thing that's in it.

269
00:16:43,210 --> 00:16:45,694
Speaker 1: I suspect partly is I always get this impression.

270
00:16:45,774 --> 00:16:57,070
Speaker 1: Amazon doesn't want to invest in a ton of usability stuff because they can easily force their users to implement that themselves so they can focus on much simpler core independent services.

271
00:16:58,972 --> 00:17:00,154
Speaker 0: It is a weird thing.

272
00:17:00,214 --> 00:17:00,354
Speaker 0: Right.

273
00:17:00,394 --> 00:17:04,760
Speaker 0: And that they do make a lot of things very usable.

274
00:17:05,080 --> 00:17:05,361
Speaker 0: Right.

275
00:17:05,642 --> 00:17:07,404
Speaker 0: But you still have to like.

276
00:17:07,424 --> 00:17:11,670
Speaker 0: if you want to host things on Amazon Web Services, you need to learn a bunch of Amazon.

277
00:17:12,050 --> 00:17:18,450
Speaker 0: For each service you use, you need to like read documentation and learn how to interact with that service.

278
00:17:18,650 --> 00:17:25,944
Speaker 1: If you use it and you only know DNS and you don't know the specifics of Route 53, you'll be able to make it work.

279
00:17:25,964 --> 00:17:28,929
Speaker 1: But you'll also probably make some interesting mistakes along the way.

280
00:17:30,270 --> 00:17:35,717
Speaker 0: Well, I think the Route 53 one may be a bad example because it's just DNS.

281
00:17:35,777 --> 00:17:38,040
Speaker 0: But like RDS, which is host a database.

282
00:17:38,080 --> 00:17:38,280
Speaker 0: Right.

283
00:17:38,320 --> 00:17:48,917
Speaker 0: So if you know how to administer and host a Postgres database and you go to Amazon RDS and turn on a Postgres database, it's like, all right, you'll you'll be OK to start.

284
00:17:49,218 --> 00:17:51,022
Speaker 0: But it's like, oh, I want to change some settings.

285
00:17:51,082 --> 00:17:54,810
Speaker 0: Well, you can't really access the configuration file in the file system.

286
00:17:54,950 --> 00:17:57,034
Speaker 0: The configurations are stored in this other thing.

287
00:17:57,054 --> 00:17:59,139
Speaker 0: And you've got to learn how to use that thing.

288
00:17:59,179 --> 00:18:04,750
Speaker 0: And that thing has limits on it that don't exist if you're just running your own server and you have to learn about those.

289
00:18:05,151 --> 00:18:08,843
Speaker 0: And then there's all these extra added features on top of it to make life easier.

290
00:18:08,863 --> 00:18:10,970
Speaker 0: You have to learn how to use those, too, because those are nice.

291
00:18:11,010 --> 00:18:15,598
Speaker 1: I suspect another big part of it is the complexity of doing it right on the inside.

292
00:18:15,638 --> 00:18:20,187
Speaker 1: If Amazon did it mostly involves their already very complex private network.

293
00:18:20,627 --> 00:18:21,990
Speaker 1: And it's probably not worth the cost.

294
00:18:22,170 --> 00:18:24,955
Speaker 1: That's that's the kind of thing I deal with in my own day job.

295
00:18:25,776 --> 00:18:33,550
Speaker 1: And it is surprising how hard it is to get multiple separate physical regions to interact with each other on a real time basis.

296
00:18:35,373 --> 00:18:35,515
Speaker 0: Yep.

297
00:18:35,676 --> 00:18:37,210
Speaker 0: Anyway, so that's that's the thing.

298
00:18:37,390 --> 00:18:53,030
Speaker 1: It was also really funny to see this outage happen and see all these consumer things go down and seeing like most of capital markets and like heavy industry and a lot of government stuff not be affected at all because those industries have been very slow to adopt to this technology and adopt these platforms.

299
00:18:54,671 --> 00:18:54,831
Speaker 0: Yeah.

300
00:18:54,971 --> 00:19:05,330
Speaker 0: You know, I just hope that, you know, I think you're seeing now is something that's already been happening, but it's probably going to happen more now is, you know, the other cloud services, Azure and Google Cloud.

301
00:19:05,711 --> 00:19:13,550
Speaker 0: If people aren't using those, they're basically going to be, you know, instead of just, you know, the multi region isn't going to be enough for some people who are there.

302
00:19:13,750 --> 00:19:16,323
Speaker 1: There's companies like Cloudways that just like do that for you.

303
00:19:16,383 --> 00:19:17,850
Speaker 1: If you pay them, they will be your broker.

304
00:19:17,850 --> 00:19:18,311
Speaker 0: Exactly.

305
00:19:18,331 --> 00:19:20,053
Speaker 0: There are companies that do that.

306
00:19:20,093 --> 00:19:20,314
Speaker 0: Yeah.

307
00:19:20,935 --> 00:19:21,956
Speaker 0: Just you're going to be.

308
00:19:21,996 --> 00:19:31,030
Speaker 0: people are going to who really need to be up and how and can afford it are going to host their stuff in multiple services all around, you know, and not just.

309
00:19:31,050 --> 00:19:45,390
Speaker 1: But I guess your point, a company that needs that level of uptime is going to do that anyway, meaning there's no point in Amazon making it easier for them to do global redundancy on Amazon because they're going to definitely use other competing cloud platforms anyway.

310
00:19:46,391 --> 00:19:47,974
Speaker 1: That's not the kind of company that's going to trust.

311
00:19:48,014 --> 00:19:54,590
Speaker 0: My recommendation to you out there is if you're hosting some Internet services is if they're not a big deal.

312
00:19:55,270 --> 00:19:55,390
Speaker 0: Right.

313
00:19:55,430 --> 00:19:57,053
Speaker 1: That's what I was going to get at last.

314
00:19:57,093 --> 00:20:06,270
Speaker 1: We need to be more tolerant as a society like our system, our lives need to be able to weather relatively short outages in electronic systems.

315
00:20:06,430 --> 00:20:06,671
Speaker 0: Yeah.

316
00:20:07,772 --> 00:20:10,116
Speaker 0: If it's not a big deal, host it wherever you want.

317
00:20:10,216 --> 00:20:10,577
Speaker 0: It does.

318
00:20:10,597 --> 00:20:18,009
Speaker 0: You know, it's like even if you're in the same OZ basket as everyone else, it's like, OK, sure, it'll go down, you know, and who cares?

319
00:20:18,049 --> 00:20:18,730
Speaker 0: It's not a big deal.

320
00:20:18,790 --> 00:20:19,913
Speaker 0: You just said it's not a big deal.

321
00:20:20,354 --> 00:20:22,200
Speaker 0: And if it is a big deal, right.

322
00:20:22,881 --> 00:20:25,950
Speaker 0: Don't put all your eggs in this in the one basket with everyone else's eggs.

323
00:20:26,611 --> 00:20:31,650
Speaker 1: An MMO's login service can have a couple of days of downtime during like the big ramp up.

324
00:20:33,780 --> 00:20:36,599
Speaker 0: The hospital can't go down, even though they do all the time.

325
00:20:37,401 --> 00:20:46,797
Speaker 1: So in the other huge, huge news, there is a massive ongoing vulnerability in so many things that it's hard.

326
00:20:46,877 --> 00:20:48,640
Speaker 1: It's actually impossible to catalog them.

327
00:20:49,140 --> 00:20:55,171
Speaker 1: A lot of IT people, especially security people and operations people, have been having a really, really bad month.

328
00:20:55,351 --> 00:20:58,898
Speaker 1: If you're not aware of this, it is the log4j zero day.

329
00:21:01,902 --> 00:21:02,143
Speaker 0: Right.

330
00:21:02,223 --> 00:21:11,179
Speaker 0: So basically, if you write a program in Java, one of the things you might want to do is log messages to log files to, you know, wherever.

331
00:21:11,199 --> 00:21:11,620
Speaker 0: Right.

332
00:21:12,180 --> 00:21:21,255
Speaker 0: And so, you know, Java in the built in Java standard library, there is a logging functionality, but it's not that very good.

333
00:21:21,476 --> 00:21:21,676
Speaker 0: Right.

334
00:21:21,736 --> 00:21:23,139
Speaker 0: It doesn't have a lot of features.

335
00:21:23,199 --> 00:21:24,000
Speaker 0: It's not that fancy.

336
00:21:24,661 --> 00:21:27,547
Speaker 0: So the Apache Foundation has a project log4j.

337
00:21:27,607 --> 00:21:30,693
Speaker 0: There's actually log4j one and 2.0.

338
00:21:30,693 --> 00:21:34,120
Speaker 0: That is basically the amazing Swiss Army knife of logging.

339
00:21:34,260 --> 00:21:41,954
Speaker 0: And it's pretty easy to use and incorporates of a lot of people who make write code in Java, use log4j.

340
00:21:41,974 --> 00:21:45,500
Speaker 0: They're just like, oh, import log4j, start logging stuff.

341
00:21:46,220 --> 00:21:47,142
Speaker 0: And look at that.

342
00:21:47,202 --> 00:21:50,389
Speaker 0: I've got all these fancy logging features and it's really nice.

343
00:21:50,489 --> 00:21:54,377
Speaker 0: And I include this in all my projects and major projects, small projects.

344
00:21:54,437 --> 00:21:55,459
Speaker 0: Everyone includes this thing.

345
00:21:55,519 --> 00:21:55,820
Speaker 0: It's free.

346
00:21:56,421 --> 00:22:00,632
Speaker 1: You could do all this yourself, but that is not the thing you're writing code to do.

347
00:22:00,672 --> 00:22:03,740
Speaker 1: That's just the thing you're doing to write the code you're actually trying to write.

348
00:22:03,800 --> 00:22:05,762
Speaker 0: Yeah, we'll talk about that in a bit.

349
00:22:05,822 --> 00:22:06,523
Speaker 0: But exactly.

350
00:22:06,623 --> 00:22:24,480
Speaker 0: So what happened was is log4j was so fancy and so full of features that you could like effectively execute code and like, you know, log messages that have like include little programs in them that can execute it and all kinds of right.

351
00:22:24,900 --> 00:22:39,155
Speaker 0: Real fancy, fancy stuff you could do, which meant that if somebody could in some way interact with your program to get it to log a message, which is, you know, logging user input is pretty common, right?

352
00:22:39,275 --> 00:22:43,340
Speaker 0: It's like so and so sent us this log that to the log file.

353
00:22:43,360 --> 00:22:43,580
Speaker 0: Right.

354
00:22:44,401 --> 00:22:47,304
Speaker 0: An HTTP request came in, put that in the access logs.

355
00:22:47,344 --> 00:22:47,524
Speaker 0: Right.

356
00:22:49,466 --> 00:23:02,780
Speaker 0: You know, so if you could get someone to log a message with your data in it, you could send data and then get log4j to execute some code and then take control of their program.

357
00:23:04,461 --> 00:23:10,808
Speaker 1: Most people, even the writing software, don't think much about libraries, especially a library like this, like something so utilitarian.

358
00:23:11,309 --> 00:23:20,539
Speaker 0: It's almost like, well, so common and so used so widely and such a big deal that with the backing of a major foundation.

359
00:23:20,559 --> 00:23:21,140
Speaker 0: Right.

360
00:23:21,220 --> 00:23:25,566
Speaker 0: As you know, Apache prod dot org projects usually very trustworthy.

361
00:23:26,087 --> 00:23:30,673
Speaker 0: So it's like you just trust it implicitly, even if you're just a user and you never get involved.

362
00:23:30,693 --> 00:23:36,100
Speaker 0: But people always forget every single open source license, pretty much all of them that I know of.

363
00:23:36,220 --> 00:23:39,625
Speaker 0: They say this is provided without warranty.

364
00:23:39,645 --> 00:23:40,707
Speaker 0: Right.

365
00:23:40,968 --> 00:23:43,872
Speaker 0: There are no guarantees that this free software is going to work.

366
00:23:44,393 --> 00:23:48,339
Speaker 0: And if it breaks, there's no one to hold responsible other than yourself.

367
00:23:48,399 --> 00:23:49,020
Speaker 0: It's open source.

368
00:23:49,340 --> 00:24:06,680
Speaker 1: But even worse, most people tend to assume that software that doesn't interact directly with like fresh user input or the Internet or networks isn't as much of a security concern because it's hidden behind walls of all this other stuff like how would anything get there?

369
00:24:07,180 --> 00:24:16,880
Speaker 1: But logging is literally the kind of thing where you're sending it tons of information from your data, not just from your application itself, but the data your application is processing.

370
00:24:17,442 --> 00:24:20,752
Speaker 1: User type something weird in an input and it causes a problem.

371
00:24:20,993 --> 00:24:23,200
Speaker 1: You probably want to write that to a log file somewhere.

372
00:24:25,101 --> 00:24:32,500
Speaker 0: So what happened is because this thing was so widely deployed, this code was on so many services all over the place that were written in Java.

373
00:24:33,641 --> 00:24:39,960
Speaker 0: Every single person who was using this library had to go and perform updates to their code.

374
00:24:41,681 --> 00:24:55,860
Speaker 0: You know, if their service is online to just avoid getting completely owned because it was being exploited in the wild and lots and lots of real important code and real important services, government services, financial services, you know, all kinds of things are written in Java.

375
00:24:56,683 --> 00:24:57,365
Speaker 0: And they all had to.

376
00:24:57,606 --> 00:25:01,720
Speaker 0: basically all these IT people were up, you know, for many, many days, probably still.

377
00:25:01,840 --> 00:25:02,908
Speaker 0: Oh, it's ongoing.

378
00:25:03,028 --> 00:25:04,600
Speaker 0: It is absolutely ongoing.

379
00:25:05,060 --> 00:25:12,040
Speaker 1: Log4j is embedded in a well, not as surprising the number of places you might expect based on this conversation up to this point.

380
00:25:13,641 --> 00:25:21,160
Speaker 0: Yeah, I mean, if you were writing a Java service, you know, it's the odds of you including Log4j are very, very high.

381
00:25:21,320 --> 00:25:24,908
Speaker 1: Some of you younger kids might be thinking, well, Java, that's an old person language.

382
00:25:25,028 --> 00:25:30,620
Speaker 1: It's also the language that's probably the most used in commerce on Earth right now.

383
00:25:31,380 --> 00:25:34,680
Speaker 0: Java is a very large, very popular language in the world.

384
00:25:35,100 --> 00:25:37,880
Speaker 1: Because it's performant, it's well understood.

385
00:25:39,363 --> 00:25:41,680
Speaker 0: A lot of Android apps are, you know, written in Java.

386
00:25:41,720 --> 00:25:49,980
Speaker 1: You know for a fact if you do stuff in Java that you can hire from a sea of extremely skilled engineers who all know Java like deeply and intimately.

387
00:25:50,000 --> 00:25:50,080
Speaker 1: Yeah.

388
00:25:50,842 --> 00:25:52,224
Speaker 0: I mean, it's not.

389
00:25:52,284 --> 00:25:58,777
Speaker 0: it's not like super popular among programmers as like being cool and fun, but it's very.

390
00:25:58,857 --> 00:26:00,400
Speaker 0: it's widely used by businesses.

391
00:26:00,460 --> 00:26:01,846
Speaker 0: It is by no means dead.

392
00:26:01,866 --> 00:26:03,111
Speaker 0: It is supported.

393
00:26:03,131 --> 00:26:05,120
Speaker 0: It runs, you know, the thing.

394
00:26:05,863 --> 00:26:06,960
Speaker 1: So this is ongoing.

395
00:26:07,461 --> 00:26:17,160
Speaker 1: And if you're if you do IT or work for a tech company or have a technical technical, I assume you have a job like that or interested in one if you listen to the Monday Geek Nights.

396
00:26:17,881 --> 00:26:24,080
Speaker 1: And no one has mentioned this at any point in the last few weeks, unless, of course, you've been on vacation the last few weeks.

397
00:26:25,240 --> 00:26:29,880
Speaker 1: Might be worth at least asking someone like, hey, do we use log4j anywhere?

398
00:26:31,501 --> 00:26:37,160
Speaker 0: Well, no one mentioned it in my work because we don't use any Java because I don't work at some old funny days.

399
00:26:39,163 --> 00:26:42,195
Speaker 1: I will not speak to this other than in my personal opinion.

400
00:26:42,235 --> 00:26:42,878
Speaker 1: I'll leave it at that.

401
00:26:44,981 --> 00:26:48,510
Speaker 1: But I will talk about some of the broader ramifications, this kind of thing in the main bit.

402
00:26:48,991 --> 00:26:52,500
Speaker 1: Couple of the quick news is we'll talk about this more on a Tuesday show.

403
00:26:52,680 --> 00:27:01,680
Speaker 1: But it's worth noting now that the quest to the VR headset is outselling Xboxes and PlayStation right now.

404
00:27:02,061 --> 00:27:07,180
Speaker 0: It had a well, it could be that it's because it's actually available.

405
00:27:09,040 --> 00:27:11,449
Speaker 1: The PS5 is hard to get, but not impossible.

406
00:27:11,771 --> 00:27:13,296
Speaker 1: The Xboxes are much easier to get.

407
00:27:13,317 --> 00:27:14,240
Speaker 1: It seems to be outselling.

408
00:27:14,840 --> 00:27:20,340
Speaker 0: Well, the big Xbox, the big black one is actually very hard to get, just like the PS5 is hard to get.

409
00:27:20,500 --> 00:27:25,600
Speaker 0: But there's the little Xbox, the little white one that no one wants and that you can just get one whenever you want.

410
00:27:25,780 --> 00:27:34,200
Speaker 1: But I think the big thing that's happening here is a lot of kids, because remember, Xboxes and PlayStation, those are the realm of serious hardcore gamers.

411
00:27:34,561 --> 00:27:40,000
Speaker 1: But the Venn diagram diverges a little bit between what they're into and what PC gamers are into.

412
00:27:40,560 --> 00:27:43,587
Speaker 1: And there's all these different ecosystems and demographics that play games.

413
00:27:44,469 --> 00:27:49,020
Speaker 1: It's mostly young people who are buying VR headsets or getting VR headsets as a gift.

414
00:27:49,703 --> 00:27:52,500
Speaker 1: Like Zennials and Younger are the ones who are most interested.

415
00:27:52,560 --> 00:27:56,860
Speaker 0: Well, I think it helped that it's one that doesn't need to be plugged into a computer.

416
00:27:56,860 --> 00:27:57,866
Speaker 1: It's only 300 bucks.

417
00:27:57,987 --> 00:28:00,120
Speaker 1: It is the cheapest console.

418
00:28:00,561 --> 00:28:05,931
Speaker 0: It's not a ridiculous price and it's available.

419
00:28:07,293 --> 00:28:10,800
Speaker 0: There's actually some software for it to some extent.

420
00:28:11,280 --> 00:28:14,620
Speaker 1: Oh, actually, at this point, there are a lot of games kids can play with this.

421
00:28:14,800 --> 00:28:21,120
Speaker 1: And also, one of the things kids are crazy into is just Minecraft and VRChat, like all these basic things.

422
00:28:21,540 --> 00:28:26,620
Speaker 1: But remember, this thing is literally cheaper than a Nintendo Switch and it's a full featured VR headset.

423
00:28:26,640 --> 00:28:33,020
Speaker 0: Well, I think the final thing is that even if you, you know, it's outselling them in terms of sales, like at the moment.

424
00:28:33,342 --> 00:28:36,619
Speaker 0: But it's like there aren't more Oculus out there than there are Xbox.

425
00:28:37,321 --> 00:28:37,859
Speaker 1: Yeah, give it time.

426
00:28:40,466 --> 00:28:42,080
Speaker 0: I don't think it's going to catch up.

427
00:28:42,521 --> 00:28:47,040
Speaker 0: I think you're a lot of people, you know, this holiday season, they come in, it's like, what do I buy my kid?

428
00:28:47,321 --> 00:28:48,385
Speaker 0: They already got a Switch.

429
00:28:49,148 --> 00:28:52,060
Speaker 0: We're in the middle of a console generation here.

430
00:28:52,220 --> 00:28:52,461
Speaker 0: Right.

431
00:28:52,923 --> 00:28:56,840
Speaker 0: So it's not like you can buy, you know, it's like they got the console already.

432
00:28:57,241 --> 00:28:57,422
Speaker 0: Right.

433
00:28:57,483 --> 00:28:58,469
Speaker 0: It's like, what are you going to get them?

434
00:28:58,791 --> 00:29:00,300
Speaker 0: You know, this is the only thing that's new.

435
00:29:01,722 --> 00:29:04,495
Speaker 0: So, you know, you want to buy an expensive electronic gift for someone.

436
00:29:04,756 --> 00:29:05,480
Speaker 0: that makes sense.

437
00:29:05,923 --> 00:29:07,199
Speaker 0: It's like one of the only options.

438
00:29:07,661 --> 00:29:09,449
Speaker 1: But not only that, it's like, here I am.

439
00:29:09,530 --> 00:29:11,820
Speaker 0: I'm the only thing that you can get for your kids.

440
00:29:12,040 --> 00:29:14,338
Speaker 0: So apparently, that's an expensive electronic gift.

441
00:29:14,600 --> 00:29:23,220
Speaker 1: So much during the holiday season that it outsold things like PlayStation or Microsoft Store gift cards, Nintendo gift cards, accessories, and even most games.

442
00:29:24,420 --> 00:29:26,010
Speaker 0: Yeah, it didn't outsell the Switch, though.

443
00:29:26,071 --> 00:29:27,399
Speaker 0: The Switch is the king right now.

444
00:29:27,700 --> 00:29:31,860
Speaker 0: And so many Switches got sold that the Nintendo like eShop was having trouble staying.

445
00:29:32,060 --> 00:29:39,120
Speaker 0: But I guess the news here from a tech standpoint is that even considering how many people already have Switches, the Switch is still out the king.

446
00:29:39,300 --> 00:29:46,800
Speaker 1: In terms of technology, the Quest 1 and the Go and all those budget headsets up to this point, were really early adopter niche technology.

447
00:29:47,540 --> 00:29:54,820
Speaker 1: And the like the Index and like the full featured heavy need to plug them into a 3080 video card VR.

448
00:29:55,421 --> 00:30:01,420
Speaker 1: That is still the realm of the enthusiast, the hobbyist, the hardcore nerd, and the developer or the experimentalist.

449
00:30:01,960 --> 00:30:04,345
Speaker 1: But the Quest 2 is really like.

450
00:30:04,385 --> 00:30:11,620
Speaker 1: this is sort of proving that this is the level of technology that was enough to fully broach the expanded market.

451
00:30:12,201 --> 00:30:14,145
Speaker 1: Like this is expanded market technology.

452
00:30:14,646 --> 00:30:18,936
Speaker 1: It's not really mass market, partly just because it's still only like.

453
00:30:19,036 --> 00:30:20,740
Speaker 1: it's primarily being bought by people who have some money.

454
00:30:21,801 --> 00:30:27,140
Speaker 1: Arguably, even some consoles aren't really mass market in a traditional sense anymore, considering who buys them.

455
00:30:28,662 --> 00:30:34,840
Speaker 0: Well, I think the thing is, you know, it could be one of those things where even if it sells a shit ton, right?

456
00:30:34,960 --> 00:30:44,600
Speaker 0: Like, and by shit ton, I mean like Nintendo Wii shit ton, you know, is that it could become a thing where actually, you know, maybe what's the Quest 3 is out now?

457
00:30:44,760 --> 00:30:47,509
Speaker 1: No, this is just the Quest 2.

458
00:30:47,509 --> 00:30:48,600
Speaker 1: Quest 2 has been out for a while.

459
00:30:50,323 --> 00:30:58,800
Speaker 0: So whatever the next one, whatever the next one is, could, you know, eventually get up to Nintendo Wii type numbers, which is about as big as anything gets ever.

460
00:30:59,820 --> 00:31:07,500
Speaker 0: But I think if you look at the Wii, the Wii people used it to play a little Wii bowling and then that was it, right?

461
00:31:07,820 --> 00:31:11,088
Speaker 0: It didn't really, you know, there was some games that are on.

462
00:31:11,108 --> 00:31:16,300
Speaker 0: the Wii were big sellers, but it was, you know, it was like this novelty that everyone got and then put away.

463
00:31:16,900 --> 00:31:26,979
Speaker 0: So it remains to be seen where even if every, you know, tons and tons of people all buy VR headsets, do they use them when they're new and then put them on the shelf?

464
00:31:27,019 --> 00:31:27,380
Speaker 0: and that's it?

465
00:31:28,001 --> 00:31:33,139
Speaker 0: Or is it really going to become a thing that someone's using at least weekly, right?

466
00:31:34,980 --> 00:31:40,480
Speaker 1: It definitely seems like it's edging into the ladder in terms of game sales.

467
00:31:40,560 --> 00:31:47,180
Speaker 0: Take it out at a party, you know, you show your friends who don't have one, you know, maybe once in a while a Half-Life Alyx comes out.

468
00:31:47,220 --> 00:31:59,040
Speaker 1: But also the most of the popular things people do with these headsets, they'll play those games, but it's mostly playing the unlimited like sandbox type games, the social experiences.

469
00:31:59,320 --> 00:32:04,028
Speaker 0: There's going to be some people obviously who are using it like, you know, like wild, right?

470
00:32:04,048 --> 00:32:09,879
Speaker 0: They use it a lot, but I think the majority of people who have one will use it a whole bunch and then put away.

471
00:32:10,660 --> 00:32:18,280
Speaker 1: A little bit of data I've seen on that implies that high-end VR headsets have that problem way more than low-end VR headsets.

472
00:32:19,920 --> 00:32:20,563
Speaker 0: That makes sense.

473
00:32:20,945 --> 00:32:22,352
Speaker 0: You know, it's the same with board games, right?

474
00:32:22,372 --> 00:32:24,060
Speaker 0: People buy all the fancy board games and they put them on the shelf.

475
00:32:24,100 --> 00:32:26,120
Speaker 1: Yep, one gets played the most like good old Sadler's store.

476
00:32:27,761 --> 00:32:30,854
Speaker 0: Your Uno gets played more than your $50, $100 box of minis, right?

477
00:32:32,300 --> 00:32:39,660
Speaker 1: But this is a good sign that this is a significant plateau and milestone of the technology itself.

478
00:32:41,248 --> 00:32:42,840
Speaker 0: It helps that they got rid of the Facebook account.

479
00:32:42,860 --> 00:33:00,240
Speaker 1: Yep, VR headset technology has hit a consumer milestone that we hadn't really seen before and that is a mature enough platform that could be used to build very popular long-standing experiences where technology before the Quest 2 was either not there yet or too expensive.

480
00:33:06,831 --> 00:33:09,535
Speaker 1: But anyway, things of the day.

481
00:33:09,615 --> 00:33:18,727
Speaker 1: This is a cute little infographic visualization of fruits by their appearances in Mario games from 1989 to present day.

482
00:33:22,290 --> 00:33:28,010
Speaker 0: So they're just counting like here was a game with Mario in it, which fruits appeared at least once in this game.

483
00:33:28,110 --> 00:33:28,474
Speaker 1: Exactly.

484
00:33:28,696 --> 00:33:30,210
Speaker 1: And pineapple was the leader.

485
00:33:30,230 --> 00:33:32,749
Speaker 0: So every Mario Kart has one for banana, right?

486
00:33:32,930 --> 00:33:35,729
Speaker 1: But pineapple was the winner for a long time.

487
00:33:38,270 --> 00:33:42,530
Speaker 1: And then grapes caught up until one day in the year 19...

488
00:33:42,530 --> 00:33:44,349
Speaker 0: Well, you got some cherry coming in with Mario 2 there.

489
00:33:44,591 --> 00:33:47,210
Speaker 1: Around 1995 bananas run away with the game.

490
00:33:48,471 --> 00:33:49,256
Speaker 0: Yeah, Mario Kart.

491
00:33:51,147 --> 00:33:51,730
Speaker 0: There's a lot of Mario Kart.

492
00:33:51,730 --> 00:33:52,676
Speaker 1: There are a lot of Mario Karts.

493
00:33:52,978 --> 00:33:54,910
Speaker 1: I've barely even played the one on the Switch.

494
00:33:56,710 --> 00:33:58,990
Speaker 0: Yeah, and Donkey Kong games also have bananas sometimes.

495
00:33:59,630 --> 00:34:01,290
Speaker 0: And Mario appears in Donkey Kong games.

496
00:34:01,430 --> 00:34:04,842
Speaker 1: But the funniest thing about this is it's just a tweet that has the animation.

497
00:34:04,902 --> 00:34:06,267
Speaker 1: It's like 45 seconds long.

498
00:34:06,287 --> 00:34:07,130
Speaker 1: that shows this history.

499
00:34:07,750 --> 00:34:13,130
Speaker 1: But the first reply to it is the Wikipedia article about Luigi's canonical girlfriend.

500
00:34:15,953 --> 00:34:18,550
Speaker 1: Who only appeared once in the Super Mario Brothers Super Show.

501
00:34:20,090 --> 00:34:20,471
Speaker 0: Correct.

502
00:34:21,572 --> 00:34:30,370
Speaker 0: So there's this, I guess, I don't know if it's a genre, but this category of YouTube videos that reply to other YouTube videos.

503
00:34:30,570 --> 00:34:33,770
Speaker 0: Like someone makes one YouTube video and someone else makes like a follow-up, right?

504
00:34:34,891 --> 00:34:39,830
Speaker 0: And here's a weird situation where I watched a follow-up video and I never saw the original video and I still...

505
00:34:39,830 --> 00:34:42,007
Speaker 1: Yeah, you sent me a link to this and I was like, "Ooh, I really want to watch

506
00:34:42,027 --> 00:34:42,188
Speaker 1: this.".

507
00:34:42,471 --> 00:34:48,790
Speaker 1: And then I watched like the first 10 seconds of it and I realized that it was responding to a video I had seen.

508
00:34:50,449 --> 00:34:52,190
Speaker 0: So you saw the original but you didn't see this one.

509
00:34:52,411 --> 00:34:52,675
Speaker 1: Exactly.

510
00:34:52,695 --> 00:34:53,830
Speaker 1: So now I'm really curious to watch this one.

511
00:34:55,431 --> 00:35:06,168
Speaker 0: So the original video, correct me if I'm wrong, is somebody who is asking the question, "What if I had a wire, a circuit that was like a whole light minute...".

512
00:35:07,951 --> 00:35:08,793
Speaker 0: Yeah, right.

513
00:35:08,813 --> 00:35:09,794
Speaker 0: Like really long.

514
00:35:10,255 --> 00:35:18,630
Speaker 0: If I turned on the light switch at one end, would there be a speed of light delay before the light bulb turns on at the other end?

515
00:35:19,370 --> 00:35:23,202
Speaker 0: And all they did in their video was just sort of figure it out on paper with math.

516
00:35:24,266 --> 00:35:25,670
Speaker 0: And the answer is yes, obviously.

517
00:35:28,011 --> 00:35:43,010
Speaker 0: But here in this video, the follow-up video that I did watch, which is the only one I've seen, this person takes a light switch and not an actual light bulb, but instead, you know, a resistor with the scope hooked up to it.

518
00:35:45,412 --> 00:35:46,153
Speaker 0: Right.

519
00:35:46,253 --> 00:36:02,630
Speaker 0: And they stretch out some wire, you know, half a kilometer in two different directions and they flick the switch and look at the oscilloscope recording and they see, did it take, you know, X amount of time before the electrons made it to the other side?

520
00:36:03,350 --> 00:36:04,123
Speaker 0: Well, the answer is yes.

521
00:36:04,850 --> 00:36:09,789
Speaker 1: Well, electrons don't actually make it to the other side, but that's a whole separate...

522
00:36:10,070 --> 00:36:12,190
Speaker 0: Well, the other electrons got pushed.

523
00:36:12,190 --> 00:36:20,290
Speaker 1: Yeah, I was about to say, I'm assuming this video does not get into the, like, the physics stuff of how it's actually just a field that is transferring the energy.

524
00:36:20,851 --> 00:36:22,229
Speaker 0: Oh no, he explains all that, yeah.

525
00:36:22,570 --> 00:36:23,832
Speaker 1: The electrons, like, barely move at all.

526
00:36:23,852 --> 00:36:25,194
Speaker 1: Like, they move slower than you walk.

527
00:36:28,319 --> 00:36:28,700
Speaker 1: Literally.

528
00:36:29,321 --> 00:36:29,701
Speaker 1: Literally.

529
00:36:30,322 --> 00:36:35,010
Speaker 1: The electrons move, the electrons move, like, maybe a foot an hour.

530
00:36:37,711 --> 00:36:41,961
Speaker 0: The point is, the resistor, right, there is a speed of light delay, right?

531
00:36:42,042 --> 00:36:45,410
Speaker 0: It's not magically cheating, right, against the laws of the universe.

532
00:36:45,690 --> 00:36:56,090
Speaker 0: And here you can see that in experimental reality and you can also see all the other, you know, little messes in the experiment, how it's not just this perfect, you know, jump.

533
00:36:56,971 --> 00:37:02,668
Speaker 0: And he explains all those things too, of exactly what caused that and proves it as well.

534
00:37:02,708 --> 00:37:03,270
Speaker 0: So it's really interesting.

535
00:37:03,270 --> 00:37:04,209
Speaker 1: It does look like a fascinating video.

536
00:37:05,971 --> 00:37:11,943
Speaker 0: Yeah, so it's always nice to see someone take the, you know, just the numbers and be like, "Here, let me show you.

537
00:37:12,745 --> 00:37:14,890
Speaker 0: If someone wants to get an A in high school physics, here's your

538
00:37:14,910 --> 00:37:15,010
Speaker 0: video.".

539
00:37:15,030 --> 00:37:29,030
Speaker 1: But also just the act of trying to yourself experimentally verify something, like, do it yourself, that is a huge way to interact with and learn about the world much more readily than just learning something from watching a video.

540
00:37:29,150 --> 00:37:30,350
Speaker 1: Actually, try to make it work yourself.

541
00:37:30,350 --> 00:37:40,749
Speaker 0: But imagine if this experiment here with the oscilloscope and the wire had been done in, you know, like old times, like Tesla Edison times before we knew all this.

542
00:37:41,130 --> 00:37:44,199
Speaker 1: Many of these kinds of experiments were done back then.

543
00:37:44,219 --> 00:37:48,110
Speaker 1: The science behind this was pretty well understood back then.

544
00:37:49,630 --> 00:37:53,245
Speaker 0: I'm just saying, you know, we didn't know about the, that was pre-Einstein, right?

545
00:37:53,285 --> 00:37:54,610
Speaker 0: We didn't know everything.

546
00:37:54,891 --> 00:37:56,597
Speaker 1: When was Einstein?

547
00:37:56,757 --> 00:37:58,403
Speaker 1: When do you think we figured that part out?

548
00:37:59,105 --> 00:38:00,510
Speaker 1: When do you think we figured out the speed of light?

549
00:38:00,730 --> 00:38:00,791
Speaker 0: 30s, 40s.

550
00:38:03,611 --> 00:38:09,603
Speaker 1: Or more importantly, when did we figure out, like, electromagnetic fields, which are the real thing.

551
00:38:09,643 --> 00:38:13,250
Speaker 1: Electrons are just like, they're irrelevant compared to the concept of the field.

552
00:38:14,930 --> 00:38:15,251
Speaker 0: Yeah.

553
00:38:15,271 --> 00:38:23,009
Speaker 0: Regardless, really good video with some high school physics action being shown in an experiment that I've never seen, you know, Mr.

554
00:38:23,049 --> 00:38:23,470
Speaker 0: Wizard do.

555
00:38:23,972 --> 00:38:27,310
Speaker 1: I remember it was in high school physics with one of our labs, like our test.

556
00:38:27,852 --> 00:38:28,990
Speaker 0: Bill Nye didn't do this one.

557
00:38:29,150 --> 00:38:41,830
Speaker 1: But near the end of the year, it was using instruments we had in the classroom, go outside, do whatever you're going to do, and calculate the size of the sun only using measurements you collect yourself.

558
00:38:43,991 --> 00:38:45,875
Speaker 1: And yeah, we were off.

559
00:38:46,075 --> 00:38:48,761
Speaker 1: I calculated a sun that was about the size of Earth.

560
00:38:49,121 --> 00:38:51,666
Speaker 1: Someone else calculated one that was bigger than the known universe.

561
00:38:52,388 --> 00:38:53,310
Speaker 1: We really fucked that one up.

562
00:38:55,032 --> 00:38:57,328
Speaker 0: Can I go to the library first and figure out how...

563
00:38:57,670 --> 00:39:04,049
Speaker 1: Oh yeah, you can know the real answer, but the lab, you only got credit if you proved, if you came to a result using only...

564
00:39:04,310 --> 00:39:07,629
Speaker 0: Well, I could figure out what measurements they used, you know, centuries ago.

565
00:39:08,690 --> 00:39:14,300
Speaker 1: That's why I bring it up, because just like this video, the hard part is not knowing what to do or what to measure.

566
00:39:14,601 --> 00:39:19,710
Speaker 1: The hard part is knowing how practically to get that measurement.

567
00:39:20,290 --> 00:39:23,290
Speaker 1: I think of a scene in It's Always Sunny where they're going to sell gas.

568
00:39:23,690 --> 00:39:25,850
Speaker 0: Well, owning an expensive oscilloscope is a good start.

569
00:39:25,870 --> 00:39:26,534
Speaker 1: It is a good start.

570
00:39:26,554 --> 00:39:29,350
Speaker 1: I did not have access to an oscilloscope for that particular exercise.

571
00:39:29,992 --> 00:39:32,230
Speaker 0: I don't think an oscilloscope can help measure the size of the sun.

572
00:39:32,370 --> 00:39:33,354
Speaker 1: Probably not.

573
00:39:34,418 --> 00:39:37,850
Speaker 1: I could use that to figure out the speed of light and then use that to make other calculations.

574
00:39:38,790 --> 00:39:41,110
Speaker 1: Because remember, I could not use any number I did not measure myself.

575
00:39:43,430 --> 00:39:47,581
Speaker 1: Anyway, so in the meta moment, the Kingston Eyes Book Club book, Tale of Genji.

576
00:39:47,601 --> 00:39:49,266
Speaker 1: I'm Genji-ing along.

577
00:39:49,707 --> 00:39:50,910
Speaker 1: I think we can do this show in January.

578
00:39:53,670 --> 00:39:54,131
Speaker 0: Hopefully.

579
00:39:54,151 --> 00:39:58,120
Speaker 0: It's weird, because it's like, yeah, you've got like 20-something hours left.

580
00:39:58,160 --> 00:39:58,560
Speaker 0: Guess what?

581
00:39:58,621 --> 00:40:00,384
Speaker 0: I've been reading basically every day.

582
00:40:00,404 --> 00:40:02,128
Speaker 0: I've still got 20-something hours left.

583
00:40:02,188 --> 00:40:03,030
Speaker 0: It's like it's not moving.

584
00:40:03,270 --> 00:40:04,975
Speaker 0: I mean, I got burned by that with the last R.

585
00:40:04,995 --> 00:40:09,567
Speaker 1: Scott Bakker book where I was like, oh man, I've got like 40% of this book to go.

586
00:40:09,607 --> 00:40:10,830
Speaker 1: There's a lot that could still happen.

587
00:40:10,910 --> 00:40:16,288
Speaker 1: I turn the page, here's the 48-page glossary, and then here's the 100-page index.

588
00:40:16,749 --> 00:40:16,970
Speaker 1: Great.

589
00:40:17,791 --> 00:40:18,915
Speaker 0: Oh, maybe that's what's happening.

590
00:40:19,176 --> 00:40:19,959
Speaker 0: I don't even know.

591
00:40:20,140 --> 00:40:22,388
Speaker 1: I feel like we should do the show at the end of January no matter what.

592
00:40:25,635 --> 00:40:27,630
Speaker 0: I feel like it doesn't count if I didn't finish the whole book.

593
00:40:27,650 --> 00:40:35,330
Speaker 1: I'm just saying, I expect to be ready well before the end of January unless I'm making some terrifying error here, but we'll see.

594
00:40:35,490 --> 00:40:36,808
Speaker 0: I hope so also, but you know.

595
00:40:37,110 --> 00:40:47,230
Speaker 1: Anyway, what I will say is if you started reading The Tale of Genji and slowed down or put it out like we might have, all I'll say is read it fast like it's a book.

596
00:40:47,410 --> 00:40:54,610
Speaker 1: And if you were confused, go read a cliff note or something after you read the chapter to sort out details, but don't sweat those details otherwise.

597
00:40:55,290 --> 00:41:00,648
Speaker 1: And two, treat it like entertainment, like just what fucking bullshit did Genji get into this week?

598
00:41:01,892 --> 00:41:09,710
Speaker 1: And you'll find that as the book goes on, after a lull, the drama that Genji gets involved in starts to escalate in scale.

599
00:41:10,270 --> 00:41:15,209
Speaker 1: And things start to get a little more interesting than just, "Oh no, he might get caught sleeping with that

600
00:41:15,269 --> 00:41:15,510
Speaker 1: woman.".

601
00:41:15,691 --> 00:41:18,264
Speaker 1: It's more like, "Oh no, the Emperor might have him

602
00:41:18,324 --> 00:41:18,565
Speaker 1: executed.".

603
00:41:20,173 --> 00:41:23,289
Speaker 0: And I got better at reading it, I got more used to reading it.

604
00:41:26,172 --> 00:41:35,550
Speaker 1: Anyway, and my last panel from PAX Unplugged, probably the last public appearance I'll do in a long time, is on YouTube with slides as promised.

605
00:41:35,690 --> 00:41:38,490
Speaker 1: You can just watch it, pretty happy with that one, Rare Game Mechanics.

606
00:41:40,370 --> 00:41:49,168
Speaker 1: Can't even speculate on the odds of me or Scott or really anything happening at PAX East for us right now, so we'll revisit that topic in a couple months.

607
00:41:49,248 --> 00:41:50,010
Speaker 1: We'll see how things go.

608
00:41:51,612 --> 00:41:53,389
Speaker 0: That'll be a last minute deal, if anything.

609
00:41:53,750 --> 00:41:56,350
Speaker 1: Yup, that is definitely a last minute situation.

610
00:41:57,031 --> 00:42:00,710
Speaker 0: And I'm pretty much working on the new website, I worked on it basically all day today.

611
00:42:01,591 --> 00:42:04,409
Speaker 1: I'm working, I was working on day job all day today.

612
00:42:06,611 --> 00:42:08,590
Speaker 0: I'm gonna have to start working again next week.

613
00:42:08,610 --> 00:42:13,150
Speaker 1: I gotta pick a day with our friend to finish Portal 2 co-op, which neither one of us had ever played.

614
00:42:13,611 --> 00:42:15,609
Speaker 1: We figured, let's just do it, we've been playing it.

615
00:42:16,111 --> 00:42:17,109
Speaker 0: I played that when it was new.

616
00:42:17,414 --> 00:42:18,349
Speaker 1: It was real good, but it wasn't fun.

617
00:42:19,291 --> 00:42:30,248
Speaker 1: Last thing, get this, we got to the end, I caused an unresolvable glitch, and we had to exit without finishing the last level, or nearly the last level.

618
00:42:32,130 --> 00:42:33,586
Speaker 1: And we have to do that section again now.

619
00:42:34,471 --> 00:42:38,169
Speaker 1: I got a cube stuck to myself in a way that even death could not unstick it.

620
00:42:40,211 --> 00:42:43,387
Speaker 1: It was super weird and I can't replicate it.

621
00:42:44,871 --> 00:42:45,274
Speaker 0: Alright.

622
00:42:46,159 --> 00:42:47,830
Speaker 0: Well, let's talk about some libraries.

623
00:42:48,290 --> 00:42:55,470
Speaker 0: So as we were discussing in the news, with the Log4j situation, sometimes you're writing a computer program, you're making some software.

624
00:42:56,652 --> 00:43:00,230
Speaker 0: And maybe the software you're writing is, I don't know, Pong, you want to make a Pong.

625
00:43:02,014 --> 00:43:05,950
Speaker 0: You want to write code that is related directly to the Pong.

626
00:43:06,670 --> 00:43:08,584
Speaker 0: Paddles, balls, score, etc.

627
00:43:10,473 --> 00:43:17,590
Speaker 0: But in the course of doing that, you're going to need to write code that also does other things that have nothing to do with Pong.

628
00:43:18,090 --> 00:43:22,249
Speaker 0: It's like, okay, when they push the up button, move the paddle up.

629
00:43:23,010 --> 00:43:23,952
Speaker 0: Well, there isn't.

630
00:43:24,273 --> 00:43:31,790
Speaker 0: in what programming language, the C programming language doesn't include a "did the person press the up button" command.

631
00:43:33,534 --> 00:43:34,668
Speaker 0: There's no such thing as that.

632
00:43:36,190 --> 00:43:39,804
Speaker 0: You need to write software code that will do USB shit.

633
00:43:42,571 --> 00:43:48,350
Speaker 0: Find game pads, detect game pads, figure out which one is player one, figure out if the button was pressed.

634
00:43:49,330 --> 00:43:54,740
Speaker 1: Abstract all that stuff away to the point to where your program can say, "If button pressed, do

635
00:43:54,900 --> 00:43:54,920
Speaker 1: X.".

636
00:43:56,561 --> 00:43:56,842
Speaker 0: Right.

637
00:43:57,324 --> 00:44:00,780
Speaker 0: And so you're writing this Pong game, and what are you going to do?

638
00:44:00,920 --> 00:44:01,605
Speaker 0: Are you going to stop?

639
00:44:02,672 --> 00:44:03,860
Speaker 0: All you want to do is do Pong.

640
00:44:04,281 --> 00:44:10,800
Speaker 0: If you have to sit there and write a game pad controller code in order to write Pong, you're going to be there all fucking day.

641
00:44:11,901 --> 00:44:13,085
Speaker 0: Even if you know how to do that.

642
00:44:14,270 --> 00:44:15,795
Speaker 0: That's very hard to write.

643
00:44:15,916 --> 00:44:17,140
Speaker 0: Pong is very easy to write.

644
00:44:18,781 --> 00:44:32,099
Speaker 0: And so what we've done is functions like that, like draw something on the screen, or read the game controller, or what's the mouse up to, or play a video, or play a sound, right?

645
00:44:33,841 --> 00:44:37,460
Speaker 0: All that code is code that a lot of people use in a lot of programs.

646
00:44:38,060 --> 00:44:41,397
Speaker 0: So log some text to a log file, right?

647
00:44:41,438 --> 00:44:41,659
Speaker 0: Log4j.

648
00:44:42,961 --> 00:44:49,260
Speaker 0: We write that code once, someone out there writes it, and then everyone else just uses it, right?

649
00:44:49,340 --> 00:44:52,691
Speaker 0: We say, "Oh, someone else out there already wrote game pad handling code.

650
00:44:53,012 --> 00:44:55,460
Speaker 0: I'm just going to get their code and use

651
00:44:55,480 --> 00:44:55,520
Speaker 0: it.".

652
00:44:55,560 --> 00:45:01,560
Speaker 1: Now in some ways, even in the earliest days of computing, you would kind of do this on your own.

653
00:45:01,620 --> 00:45:05,500
Speaker 1: Like you'd write a function that did a thing, then you might reuse that function.

654
00:45:06,021 --> 00:45:07,320
Speaker 1: You might give that function to someone else.

655
00:45:07,360 --> 00:45:10,799
Speaker 0: Yeah, you would just copy and paste it into all your other programs because you just kept using it.

656
00:45:11,702 --> 00:45:25,580
Speaker 1: So it's basically like that, just scaling up and scaling up of what parts of coding are interesting to you or intrinsic to what you're doing, and what parts of coding are a problem someone else has solved probably better than you would if you did it on your own.

657
00:45:26,980 --> 00:45:30,260
Speaker 0: Yeah, even something simple like what's the square root of a number, right?

658
00:45:30,360 --> 00:45:32,326
Speaker 0: It's like there isn't just, you can't just do that.

659
00:45:32,346 --> 00:45:35,956
Speaker 0: It's not like division where the CPU has a division instruction.

660
00:45:36,117 --> 00:45:36,979
Speaker 0: Well, some of them do.

661
00:45:37,902 --> 00:45:38,700
Speaker 1: Let's not get into that.

662
00:45:40,104 --> 00:45:41,320
Speaker 0: Yeah, let's not get into that at all.

663
00:45:41,540 --> 00:45:46,380
Speaker 1: To write the code that'll do that, you're going to have to basically do a mathematical proof.

664
00:45:48,241 --> 00:45:58,140
Speaker 0: Yeah, and it's like someone else already did it, and not only did they already do it, they already did it in like the best, fastest, most reliable possible way that it can be done.

665
00:45:59,602 --> 00:46:02,708
Speaker 0: So even if you wrote that code, you would do a worse job of it.

666
00:46:03,049 --> 00:46:05,514
Speaker 0: Just import their code and use it.

667
00:46:09,202 --> 00:46:14,600
Speaker 1: Someone discovered a faster algorithm to do multiplication of numbers with a lot of digits.

668
00:46:15,160 --> 00:46:16,785
Speaker 1: It wasn't a human intuitive way.

669
00:46:16,805 --> 00:46:21,500
Speaker 1: It was like this weird nonsense, but it's just faster, like materially faster.

670
00:46:24,082 --> 00:46:29,380
Speaker 0: So some of these functions get included in what's known as the standard library.

671
00:46:29,540 --> 00:46:40,900
Speaker 0: So most programming languages have a standard library, which is when you start coding in that language, all of these functions are just sort of already there available for you to import them.

672
00:46:41,020 --> 00:46:46,234
Speaker 0: So if you write in Python, you could do import math, math dot square root, and just go to town.

673
00:46:46,274 --> 00:46:48,660
Speaker 0: You don't need to like install anything, right?

674
00:46:48,700 --> 00:46:49,685
Speaker 0: It's just there.

675
00:46:49,765 --> 00:46:52,740
Speaker 0: It's included in Python, batteries included, right?

676
00:46:53,482 --> 00:47:01,720
Speaker 0: If you're writing in C, you know, I guess the standard library doesn't technically have to be there, but it's going to be there.

677
00:47:02,281 --> 00:47:06,969
Speaker 0: You can include, you know, stdio.h and start doing printf, right?

678
00:47:07,290 --> 00:47:10,315
Speaker 0: That's going to work on basically any computer that you find.

679
00:47:10,656 --> 00:47:12,559
Speaker 0: That's going to be installed already, right?

680
00:47:14,341 --> 00:47:17,270
Speaker 0: But sometimes log4j, it's not going to be there.

681
00:47:17,631 --> 00:47:19,799
Speaker 0: You got to go out and get it from somewhere.

682
00:47:20,662 --> 00:47:24,620
Speaker 1: Export X from Y, it's going to be some flavor of that in many cases.

683
00:47:26,060 --> 00:47:27,522
Speaker 0: Well, you got to download it first, right?

684
00:47:27,582 --> 00:47:33,070
Speaker 0: So now back in the day, and this is kind of like the crux, right?

685
00:47:33,651 --> 00:47:39,500
Speaker 0: Back in the day, you know, pretty much all the programming languages, most of them were compiled languages.

686
00:47:39,500 --> 00:47:42,524
Speaker 0: And today there's still a lot of compiled languages, right?

687
00:47:42,985 --> 00:47:54,940
Speaker 0: And when you compile code, you write some source code, some text, and you run the compiler and it generates an executable file, a .exe or whatever it is, depending on your computer, right?

688
00:47:55,020 --> 00:47:56,607
Speaker 0: An ELF binary on Linux or whatever.

689
00:47:58,213 --> 00:47:59,740
Speaker 0: And then that's what you actually run.

690
00:48:00,561 --> 00:48:08,494
Speaker 0: So anything that you're going to like, you know, use as from a library, you have two options.

691
00:48:08,574 --> 00:48:12,520
Speaker 0: Number one is you can do what's known as static linking, right?

692
00:48:12,940 --> 00:48:18,577
Speaker 0: Where all the code from those libraries is actually getting included in your .exe.

693
00:48:19,880 --> 00:48:28,194
Speaker 0: So you get this giant .exe at the end that includes all the stuff you imported and your code all in this one big .exe file.

694
00:48:29,736 --> 00:48:32,140
Speaker 0: And that's good and bad, right?

695
00:48:32,540 --> 00:48:33,825
Speaker 0: So why is it good?

696
00:48:33,925 --> 00:48:38,020
Speaker 0: It's good because that .exe will pretty much just run on almost any computer.

697
00:48:38,420 --> 00:48:38,803
Speaker 0: Yep.

698
00:48:39,084 --> 00:48:40,673
Speaker 1: Copy it to some random location.

699
00:48:40,814 --> 00:48:41,780
Speaker 1: It is self-contained.

700
00:48:43,121 --> 00:48:44,745
Speaker 0: You can just copy it to someone else's computer.

701
00:48:44,906 --> 00:48:45,126
Speaker 0: Run it.

702
00:48:45,187 --> 00:48:46,350
Speaker 0: It's going to work, right?

703
00:48:46,410 --> 00:48:47,252
Speaker 0: So that's really nice.

704
00:48:48,095 --> 00:48:48,476
Speaker 0: Bad.

705
00:48:48,797 --> 00:48:50,060
Speaker 0: It's kind of big, right?

706
00:48:50,380 --> 00:48:54,553
Speaker 0: It's a lot of hard drive space, especially, you know, nowadays hard drive space, no one cares.

707
00:48:54,633 --> 00:48:56,860
Speaker 0: But back in the day, that was a big deal, right?

708
00:48:56,920 --> 00:49:01,026
Speaker 0: If you couldn't statically link everything, you run out of hard drive space because you basically be copying.

709
00:49:01,327 --> 00:49:09,560
Speaker 0: every single program would have the same exact code included in its .exe file, just wasting space, duplicate data all over the place, right?

710
00:49:09,800 --> 00:49:10,462
Speaker 0: That's not great.

711
00:49:11,524 --> 00:49:17,475
Speaker 0: Also not great, you know, let's say that you use something like, I don't know, log4j, right?

712
00:49:17,836 --> 00:49:19,259
Speaker 0: And you need to update log4j.

713
00:49:20,401 --> 00:49:28,632
Speaker 0: If it's included in your .exe file, now you have to recompile your whole program with the new log4j, right?

714
00:49:29,252 --> 00:49:33,678
Speaker 0: And then just give everyone a new .exe file to replace the old one.

715
00:49:33,859 --> 00:49:34,780
Speaker 0: That's a pain in the ass.

716
00:49:36,241 --> 00:49:39,913
Speaker 0: So the solution for that is something they came up with called dynamic linking.

717
00:49:39,933 --> 00:49:42,060
Speaker 0: So this is, you've seen our Windows DLL files.

718
00:49:43,020 --> 00:49:43,879
Speaker 0: Yup, dynamically linked library.

719
00:49:45,480 --> 00:49:47,060
Speaker 0: Yeah, something like that, right?

720
00:49:47,260 --> 00:49:49,113
Speaker 1: Trying to think back to my old wine days.

721
00:49:49,153 --> 00:49:50,120
Speaker 1: I used to be a wine expert.

722
00:49:50,521 --> 00:49:53,187
Speaker 0: Yeah, you know, same thing.

723
00:49:53,328 --> 00:49:58,620
Speaker 0: Think about like DirectX or, you know, Microsoft Visual C++ Redistributable, right?

724
00:49:59,000 --> 00:50:04,130
Speaker 0: It's like these libraries, you just install them on your computer on their own.

725
00:50:04,531 --> 00:50:08,940
Speaker 0: They're just installed, you have them, and then you get an .exe.

726
00:50:09,200 --> 00:50:19,460
Speaker 0: The .exe doesn't include the libraries, but it does know how to find them on your computer and then load them and use them when you run the program.

727
00:50:19,660 --> 00:50:25,026
Speaker 0: So you can have several different programs that all do log4j stuff, right?

728
00:50:25,367 --> 00:50:36,560
Speaker 0: But you've only got one copy of log4j on your computer, one copy of DirectX 12 on your computer, and all those games are using the same DirectX files, right?

729
00:50:36,600 --> 00:50:39,043
Speaker 0: And when you run a game, it loads the files into memory.

730
00:50:39,103 --> 00:50:51,880
Speaker 0: When you run a different game, it loads the same files into memory, they're all sharing, you're saving hard drive space, and you can update DirectX, and now every game has a newer updated DirectX, because they're all using the one that's installed.

731
00:50:51,900 --> 00:51:00,020
Speaker 1: Now before you say, but what if I have an application that was written where it can't use, like there's some incompatibility with a new version of the library?

732
00:51:01,963 --> 00:51:03,315
Speaker 0: That happens, that's a bad thing, right?

733
00:51:04,000 --> 00:51:05,062
Speaker 1: There's a lot of ways around that.

734
00:51:05,122 --> 00:51:07,306
Speaker 1: Linking can be really complex.

735
00:51:07,346 --> 00:51:15,420
Speaker 1: You could have executables that will look for one version of a library, but can fall back gracefully to older versions of a library.

736
00:51:15,820 --> 00:51:23,237
Speaker 1: You have some that will prefer a particular version of a library, but degrade gracefully if that version isn't available.

737
00:51:23,477 --> 00:51:24,600
Speaker 1: You'll have things that just won't work.

738
00:51:25,061 --> 00:51:28,588
Speaker 1: Some applications, this is less common now, I feel like, than it used to be.

739
00:51:29,129 --> 00:51:34,380
Speaker 1: If you don't have the exact right library available, it'll just fail, sometimes in interesting ways.

740
00:51:36,240 --> 00:52:07,460
Speaker 0: Yeah, I mean, you look around and it's like, yeah, if your program was written in such a way irresponsibly, you know, maybe using the library in ways that the people who make the library didn't intend, and then the people who make the library change something, and they're like, well, anyone who's using our library properly and not doing anything we didn't tell them not to do or any undocumented stuff, even this updated library will still work with their old program, but they wrote their program irresponsibly and now it's broken by the new library version.

741
00:52:07,760 --> 00:52:10,987
Speaker 0: Also, you get irresponsible people who work on libraries.

742
00:52:11,027 --> 00:52:17,260
Speaker 0: They put a new version of their library, and that new version breaks every program that ever used that library.

743
00:52:17,400 --> 00:52:32,260
Speaker 1: That's why Linux distros in their package managers, which we've talked about in old Geek Nights, they tend to have the official version or versions of commonly used libraries that they trust, and that'll usually be a little bit behind whatever's out in the wild.

744
00:52:33,022 --> 00:52:40,200
Speaker 0: Well, they're also usually, you know, recompiling and pre-compiling everything to work together with a known set.

745
00:52:40,260 --> 00:52:48,535
Speaker 1: That's why you have so many problems trying to compile something that wasn't in that repository against libraries you got from that repository.

746
00:52:48,555 --> 00:52:51,460
Speaker 1: You get into weird situations when you're going down that road.

747
00:52:52,120 --> 00:52:55,623
Speaker 0: Well, you'll always hear Linus Torvalds of the Linux kernel.

748
00:52:55,763 --> 00:52:58,105
Speaker 0: Linux kernel isn't a library per se.

749
00:52:58,145 --> 00:53:10,515
Speaker 0: It's like a system called APIs and whatnot, but he'll always say don't break user space, which means if someone has a program that they wrote that's a Linux program, you shouldn't change the Linux kernel in any way.

750
00:53:10,875 --> 00:53:16,780
Speaker 0: that will cause Linux programs that someone wrote for an old kernel to not work properly anymore.

751
00:53:17,361 --> 00:53:18,502
Speaker 0: Don't break user space.

752
00:53:18,582 --> 00:53:36,240
Speaker 0: So he's basically acting as, I guess, effectively maintaining a library, at least in API, because a library is just an API sort of, and making sure he doesn't break any of the programs that are linking to his kernel.

753
00:53:38,041 --> 00:53:39,923
Speaker 0: So you got the static and you got the dynamic.

754
00:53:39,963 --> 00:53:43,426
Speaker 0: You got a third problem, right, is that you have interpreted languages.

755
00:53:43,506 --> 00:53:55,940
Speaker 0: So an interpreted programming language is one like Python or Perl or Bash or, you know, BASIC, right, where you don't compile the code into an EXE.

756
00:53:56,681 --> 00:54:08,194
Speaker 0: All you do is you have an EXE, like Python.exe or qbasic.exe, right, or Perl.exe, and then you say, "Hey, Python.exe," and it says, "Yeah,

757
00:54:08,234 --> 00:54:08,414
Speaker 0: what?".

758
00:54:08,554 --> 00:54:13,900
Speaker 0: You say, "Open that Python file," and it's a text file with code in it, right, that is still just text.

759
00:54:14,481 --> 00:54:20,931
Speaker 0: And that EXE looks at the text and just, you know, reads it in and starts running it immediately, right?

760
00:54:21,131 --> 00:54:21,732
Speaker 0: That's how come.

761
00:54:21,772 --> 00:54:26,560
Speaker 0: you can go to your command line and type Python and then just start typing Python code.

762
00:54:26,680 --> 00:54:28,443
Speaker 0: And when you press enter, it runs immediately.

763
00:54:28,463 --> 00:54:29,325
Speaker 0: It doesn't compile.

764
00:54:29,746 --> 00:54:30,868
Speaker 0: It just runs it.

765
00:54:30,968 --> 00:54:37,520
Speaker 0: It's because the EXE is running and reading in, right, lines of code and then executing them as soon as you press enter.

766
00:54:38,181 --> 00:54:43,248
Speaker 0: So if you have libraries for an interpreted language, what do those libraries look like?

767
00:54:43,929 --> 00:54:46,172
Speaker 0: They're just more source code files, right?

768
00:54:46,573 --> 00:54:51,960
Speaker 0: You're literally just downloading more and more source code, someone else's code that someone else wrote.

769
00:54:52,681 --> 00:55:14,013
Speaker 0: And then you tell your program to include that source code so that when the EXE comes along and reads your program and the first line in your program is import this other program, it goes and it looks and it finds those other text files with source code in them and reads those first and then it starts reading your program with all those existing library functions already in memory.

770
00:55:14,474 --> 00:55:18,060
Speaker 0: And now your program can use those functions because they've already been interpreted.

771
00:55:18,680 --> 00:55:31,620
Speaker 0: And they get reinterpreted every time you run your program, but anyone who wants to run your program has to have all of that source code on their computer along with the source code to your program on their computer.

772
00:55:32,221 --> 00:55:39,150
Speaker 0: And the interpreter for the language has to be able to find all of those source code files wherever they are.

773
00:55:39,190 --> 00:55:45,337
Speaker 0: I had to find them somewhere and they have to all be matching correct versions that go well together.

774
00:55:45,357 --> 00:55:46,759
Speaker 0: Otherwise it's not going to work.

775
00:55:46,819 --> 00:55:47,280
Speaker 0: Same deal.

776
00:55:47,821 --> 00:55:58,640
Speaker 0: So you don't have to worry about static or dynamic because it's sort of, you know, I guess you could, you know, have the source code installed once and have a bunch of different programs that all use it.

777
00:55:59,080 --> 00:56:05,809
Speaker 0: You could also include, you know, when you give someone your program, you could include even more files with it.

778
00:56:06,090 --> 00:56:13,960
Speaker 0: You could be like, yeah, by the way, my program also comes with even more files and that way the interpreter won't have to look around the computer to find some shared version.

779
00:56:14,762 --> 00:56:22,100
Speaker 1: There is even an entire Wikipedia page dedicated specifically and solely to Microsoft Windows DLL hell.

780
00:56:24,860 --> 00:56:32,449
Speaker 1: Because how libraries get used and like what it actually looks like practically varies widely depending on what you're looking at.

781
00:56:32,509 --> 00:56:35,673
Speaker 1: Like operating systems can have DLLs, DLLs can have libraries.

782
00:56:36,093 --> 00:56:37,375
Speaker 1: Code can have libraries.

783
00:56:37,715 --> 00:56:38,756
Speaker 1: Anything can have libraries.

784
00:56:38,876 --> 00:56:41,840
Speaker 1: Libraries can take different forms depending on what languages you're using.

785
00:56:42,540 --> 00:56:44,889
Speaker 1: Executals can basically act like libraries.

786
00:56:44,929 --> 00:56:47,959
Speaker 1: There's this is a very, very broad space.

787
00:56:49,620 --> 00:56:49,801
Speaker 0: Yep.

788
00:56:50,802 --> 00:56:51,042
Speaker 0: Yeah.

789
00:56:51,102 --> 00:57:01,595
Speaker 0: It's just, you know, I think it's something that, you know, only like programmers have this like at the forefront of their mind, like all you if you're coding modern software in the year twenty twenty two.

790
00:57:01,616 --> 00:57:02,557
Speaker 0: Right.

791
00:57:02,697 --> 00:57:04,960
Speaker 0: Or twenty twenty one soon to be twenty twenty two.

792
00:57:05,521 --> 00:57:11,690
Speaker 0: It's like everything you do is just is basically when you have a problem, you don't code a solution.

793
00:57:11,710 --> 00:57:18,720
Speaker 0: You find a library, you learn how to use the library and then you use it and you're really just gluing libraries together.

794
00:57:18,720 --> 00:57:24,769
Speaker 0: Because almost all the code to do basic stuff in the world has almost all already been written.

795
00:57:25,410 --> 00:57:25,651
Speaker 0: Right.

796
00:57:26,131 --> 00:57:29,977
Speaker 0: It's not like you're going to do better unless you're doing something that's brand new.

797
00:57:30,518 --> 00:57:31,660
Speaker 0: You're not going to do better.

798
00:57:31,800 --> 00:57:31,980
Speaker 0: Right.

799
00:57:32,021 --> 00:57:37,570
Speaker 0: So if you need to write a program that talks to a Postgres database, there's already Postgres client libraries.

800
00:57:37,950 --> 00:57:38,271
Speaker 0: Use them.

801
00:57:38,571 --> 00:57:38,751
Speaker 0: Right.

802
00:57:39,012 --> 00:57:42,878
Speaker 0: You want to do some encryption that's already open SSL and other encryption libraries.

803
00:57:43,159 --> 00:57:43,439
Speaker 0: Use them.

804
00:57:43,860 --> 00:57:44,020
Speaker 0: Right.

805
00:57:44,260 --> 00:57:50,332
Speaker 0: If you want to do some encrypted database stuff, well, you just write a program that uses both of those libraries and glues them together.

806
00:57:50,352 --> 00:57:54,260
Speaker 0: That's all you do as a software engineer in the present day.

807
00:57:54,600 --> 00:57:58,305
Speaker 0: If you have a job is find libraries, learn them and glue them together.

808
00:57:58,325 --> 00:58:11,080
Speaker 0: Now that you don't do a lot of writing new code unless you are maintaining a library or truly in some space that is completely unexplored, you know, making some brand new hardware.

809
00:58:11,380 --> 00:58:11,961
Speaker 1: A little bit there.

810
00:58:12,021 --> 00:58:12,721
Speaker 1: Learning them.

811
00:58:13,862 --> 00:58:18,086
Speaker 1: A problem that is becoming more and more common as we abstract things out.

812
00:58:18,547 --> 00:58:20,248
Speaker 1: I remember way back there was that issue.

813
00:58:20,288 --> 00:58:21,910
Speaker 1: It was a function in node.

814
00:58:22,430 --> 00:58:24,733
Speaker 1: Didn't it like check if a digit was even?

815
00:58:24,753 --> 00:58:32,560
Speaker 1: Like it was some trivial function that came from a library that came along with like a gigabyte of dependencies and malware.

816
00:58:34,781 --> 00:58:43,420
Speaker 1: And that is if you don't know what a library does or you get it from a shady source, that can cause extreme problems for you.

817
00:58:45,200 --> 00:58:45,341
Speaker 0: Yeah.

818
00:58:45,401 --> 00:58:49,920
Speaker 0: I mean, I think we're going to try to milk another episode out of this and talk about those issues there.

819
00:58:49,960 --> 00:58:55,927
Speaker 1: But it's worth noting that this has been a pernicious problem throughout all of computing, but it's taken on different forms.

820
00:58:56,007 --> 00:58:57,249
Speaker 1: Like the DLL.

821
00:58:57,289 --> 00:59:06,740
Speaker 1: hell of an old Windows system doesn't really happen anymore because the operating system got more advanced, has more capabilities around knowing what libraries to use when.

822
00:59:07,181 --> 00:59:11,788
Speaker 1: You know, the Windows registry that was created to solve part of that problem.

823
00:59:12,088 --> 00:59:18,999
Speaker 1: As much as people complain about the Windows registry now, I don't think many of you were alive when Windows didn't really have a registry.

824
00:59:19,039 --> 00:59:19,960
Speaker 1: the way we see it today.

825
00:59:21,340 --> 00:59:29,156
Speaker 1: Like you installed some program and it would literally just install an old version of some random library and break everything else on your computer.

826
00:59:29,657 --> 00:59:30,779
Speaker 0: We're kind of past that.

827
00:59:31,981 --> 00:59:35,424
Speaker 0: You install Windows, I don't know, 98, right?

828
00:59:35,805 --> 00:59:40,329
Speaker 0: And then you install cool program one and cool program one comes with library version one.

829
00:59:40,990 --> 00:59:45,114
Speaker 0: And then you install cool program two, which it may be Photoshop.

830
00:59:45,134 --> 00:59:51,300
Speaker 0: You install Photoshop and it has library version two and there are two DLLs with the same name that go in the same place.

831
00:59:51,440 --> 00:59:55,725
Speaker 0: So whatever program got installed most recently has its library file there.

832
00:59:56,306 --> 01:00:07,520
Speaker 0: And if both of those programs don't work with the same library version, then only the one that you installed most recently is going to work properly because it overwrote all those files with its versions.

833
01:00:07,580 --> 01:00:08,281
Speaker 0: Right.

834
01:00:08,501 --> 01:00:17,210
Speaker 0: And there wasn't a system in place to have multiple versions of the library side by side such that each program would load the version that it goes with.

835
01:00:18,471 --> 01:00:21,395
Speaker 0: And if two programs happen to use the same version, OK, good.

836
01:00:21,475 --> 01:00:22,596
Speaker 0: They can share the same version.

837
01:00:22,636 --> 01:00:26,400
Speaker 0: But otherwise, you know, that is a problem that has been solved somewhat.

838
01:00:26,741 --> 01:00:32,700
Speaker 0: Not completely, but enough that you're not going to encounter any problems with it in normal everyday life.

839
01:00:32,760 --> 01:00:46,393
Speaker 1: The place I've encountered it the most in modern times, like skipping any old worthless anecdote, tends to be around indie PC games from about a decade ago with different C# and C like redistributable libraries.

840
01:00:47,034 --> 01:00:53,140
Speaker 1: And more recently, even in Steam games, sometimes there'll be minor problems with that, especially if you're running early builds and early access.

841
01:00:53,461 --> 01:00:58,612
Speaker 1: You'll get like a weird Windows Microsoft something redistributable error and you'll have to futz around to fix that.

842
01:00:59,133 --> 01:01:02,240
Speaker 1: But that's about the extent of where I encounter that anymore.

843
01:01:03,980 --> 01:01:04,181
Speaker 0: Yeah.

844
01:01:04,221 --> 01:01:09,846
Speaker 0: I mean, if you want to see the opposite situation, right, more of the static linking kind of deal, go look at old DOS games.

845
01:01:09,906 --> 01:01:10,026
Speaker 0: Right.

846
01:01:10,046 --> 01:01:14,370
Speaker 0: You install an old DOS game and it's like, hey, choose your sound card.

847
01:01:14,390 --> 01:01:15,071
Speaker 0: Right.

848
01:01:15,872 --> 01:01:24,040
Speaker 0: Because the game is including some sound card drivers that are included with the game, not with DOS.

849
01:01:24,180 --> 01:01:24,340
Speaker 0: Right.

850
01:01:26,560 --> 01:01:36,600
Speaker 0: And whoever made that game went out and got, you know, Sound Blaster 16 libraries and included them with their game on the CD-ROM or on the floppy disks.

851
01:01:37,201 --> 01:01:42,672
Speaker 0: And each game has its own copy of some code that knows how to talk to a Sound Blaster 16.

852
01:01:42,672 --> 01:01:46,760
Speaker 0: And you've got that installed on DOS several different times, once for each game.

853
01:01:47,341 --> 01:01:51,506
Speaker 0: And each game has to know the IRQ of your sound card, right, separately.

854
01:01:52,908 --> 01:02:02,520
Speaker 0: Whereas if you have DirectX, it's like, well, you just have direct sound dot dll and all the different games load that library and talk to it and they don't have to know any of that nonsense because your operating system knows it.

855
01:02:03,080 --> 01:02:06,860
Speaker 0: And the one library takes care of it and you can, you know, everyone writes it the same way.

856
01:02:06,900 --> 01:02:22,500
Speaker 1: The other thing that's interesting that's happening with more modern software development practices, especially with the containerization of code, and we've increasingly got to the point to where we can deploy environments at scale, in bulk, en masse and independently if we want.

857
01:02:23,061 --> 01:02:40,500
Speaker 1: So increasingly, you can deploy like a Docker image or like some sort of environment that has all of the libraries you want to use, even if they're dynamically linked, so that that environment can as a whole be tested, certified, deployed, maintained independently of even other instances of that same environment.

858
01:02:42,040 --> 01:02:45,445
Speaker 0: Yeah, so this is sort of a, you know, plus and minus kind of deal, right?

859
01:02:45,465 --> 01:02:56,960
Speaker 0: I think we've did a show on containers, but what you can do with the main thing, I guess you can do with the container is, you know, virtually speaking, you take an entire operating system, right?

860
01:02:57,020 --> 01:03:00,067
Speaker 0: A whole system with all the software already installed, right?

861
01:03:00,107 --> 01:03:02,092
Speaker 0: The libraries, the programs, everything.

862
01:03:02,733 --> 01:03:05,760
Speaker 0: And then you bundle it up sort of like zip, right?

863
01:03:05,800 --> 01:03:14,520
Speaker 0: You're hiding the fact that it's actually a crap ton of files and you make it appear as if it's an exe, even though it's not right, it's a whole system.

864
01:03:15,081 --> 01:03:21,472
Speaker 0: And you're basically taking that whole system and you're running a single command in that system.

865
01:03:21,593 --> 01:03:25,640
Speaker 0: And externally, it looks like a box that runs one command.

866
01:03:25,820 --> 01:03:26,661
Speaker 0: It looks like an exe.

867
01:03:27,182 --> 01:03:30,547
Speaker 0: So you inside that box are libraries.

868
01:03:30,687 --> 01:03:37,897
Speaker 0: So now that box will never fail because it always includes the versions of the libraries it needs to run.

869
01:03:37,957 --> 01:03:40,180
Speaker 0: the one thing it runs, which is good.

870
01:03:40,840 --> 01:03:47,191
Speaker 0: But that means it's going to work everywhere, just like the statically linked library, you know, deal.

871
01:03:48,113 --> 01:03:49,816
Speaker 0: But the problem there is.

872
01:03:50,136 --> 01:03:52,360
Speaker 0: it's like, well, what's the point of the dynamic linking now?

873
01:03:52,580 --> 01:03:52,781
Speaker 0: Right.

874
01:03:52,841 --> 01:04:00,499
Speaker 0: It's like if I have an update to a library and I've got 10 containers that all use different versions of that library, I can't update all 10 of them.

875
01:04:02,141 --> 01:04:02,462
Speaker 0: Right.

876
01:04:02,763 --> 01:04:10,939
Speaker 0: You know that because I'd have to go around to the code that builds each of those containers and rebuild them all to use newer versions of log4j.

877
01:04:11,580 --> 01:04:12,101
Speaker 0: Almost like.

878
01:04:12,161 --> 01:04:15,705
Speaker 1: it'll save you like operational and troubleshooting time.

879
01:04:16,146 --> 01:04:19,210
Speaker 1: It'll make it easier to resolve problems and avoid problems.

880
01:04:19,510 --> 01:04:27,760
Speaker 1: But like Scott pointed out, it'll also cause more pain in the ass and annoyance when you're building new things, upgrading things, changing things.

881
01:04:29,161 --> 01:04:29,301
Speaker 0: Yeah.

882
01:04:29,361 --> 01:04:38,093
Speaker 0: If you just had 10 different programs installed on a computer and that had one installation of a library, you could just do update that library.

883
01:04:38,213 --> 01:04:42,740
Speaker 0: And now if all those programs are written properly, they're just suddenly going to work.

884
01:04:43,201 --> 01:04:43,441
Speaker 0: Right.

885
01:04:44,202 --> 01:04:53,780
Speaker 0: Whereas if they're all in containers, you now have to rebuild all those containers and go and work on each of those projects to get each of them updated individually.

886
01:04:54,941 --> 01:04:57,986
Speaker 0: And that could, you know, that's the, there's a downside and an upside, right?

887
01:04:58,046 --> 01:05:07,260
Speaker 0: You know, it's like if you maybe went, if you had them all installed outside containers and you updated the library globally, and now maybe two of those programs break.

888
01:05:08,000 --> 01:05:08,201
Speaker 0: Right.

889
01:05:08,301 --> 01:05:12,628
Speaker 0: Because they weren't read, you know, they weren't written properly or the version, something changed.

890
01:05:12,668 --> 01:05:13,129
Speaker 0: You don't know.

891
01:05:13,149 --> 01:05:13,870
Speaker 0: Right.

892
01:05:14,171 --> 01:05:19,480
Speaker 0: Whereas the containers are never going to break because you don't put one out there unless it is working within itself.

893
01:05:21,061 --> 01:05:23,404
Speaker 0: And it's going to work exactly the same way.

894
01:05:23,424 --> 01:05:33,515
Speaker 0: No matter what computer you deploy it on Mac, windows, Linux, you know, old busted rusty, you know, phone, flip phone, whatever.

895
01:05:33,856 --> 01:05:35,938
Speaker 0: Cause it's the exact same bundle of stuff.

896
01:05:36,298 --> 01:05:37,800
Speaker 0: It runs exactly the same everywhere.

897
01:05:38,421 --> 01:05:50,960
Speaker 1: And I'm thinking back in terms, like the last time I really cared about this was when I was writing Python code because I haven't done that much lately, but sort of pre Docker where I'd have multiple Python environments while I'm playing with different tutorials and things.

898
01:05:51,400 --> 01:05:52,922
Speaker 1: It doesn't really matter to my life anymore.

899
01:05:53,443 --> 01:05:58,632
Speaker 1: It mattered a lot when I was trying to make windows applications work on Linux via wine.

900
01:05:58,652 --> 01:06:03,680
Speaker 1: And there was mostly the game of run the application, dig through logs to figure out what failed.

901
01:06:05,160 --> 01:06:17,860
Speaker 1: Copy, I'm making quotes, a DLL that is not redistributable and is proprietary from say a windows box I had handy, put it into a place and see if that solved the problem and then repeat.

902
01:06:19,980 --> 01:06:20,161
Speaker 0: Yep.

903
01:06:20,862 --> 01:06:24,708
Speaker 1: But in terms of using libraries and writing code, it really won't matter.

904
01:06:24,728 --> 01:06:32,780
Speaker 1: The one thing I think that a lot of beginner programmers will run into is primarily the fact that there might be 10 different math libraries and you're not sure which one to use.

905
01:06:34,300 --> 01:06:40,766
Speaker 1: Probably doesn't matter if you're at the stage where you don't know.

906
01:06:40,786 --> 01:06:49,613
Speaker 1: I guess you can either use the library that's referenced in the tutorials you're doing or like you see people using the most or use the one.

907
01:06:50,194 --> 01:06:53,737
Speaker 1: I'd say don't err on the side of using the library.

908
01:06:53,757 --> 01:06:57,180
Speaker 1: that seems like it does the most unless you have a good reason to.

909
01:06:58,841 --> 01:07:04,868
Speaker 0: Usually you're going to want to A, stick to the standard library, the ones included with the language if possible.

910
01:07:06,149 --> 01:07:13,138
Speaker 0: B, find a library that is very popular and people use a lot and is still being worked on.

911
01:07:13,158 --> 01:07:15,100
Speaker 0: It's not something that's dead.

912
01:07:15,321 --> 01:07:17,152
Speaker 1: Like Log4j, lots of people work on that.

913
01:07:17,192 --> 01:07:18,117
Speaker 1: Nothing could go wrong with Log4j.

914
01:07:20,002 --> 01:07:22,100
Speaker 0: I'm just saying it's still a better choice than someone sitting there on GitHub.

915
01:07:22,100 --> 01:07:26,292
Speaker 1: Oh, it's a better choice than Joey Jojo Shabadu's Logger.foo.

916
01:07:26,332 --> 01:07:28,880
Speaker 1: that's four gigabytes and is only used by one project.

917
01:07:30,420 --> 01:07:32,530
Speaker 0: Right, and hasn't had an update in 10 years.

918
01:07:32,550 --> 01:07:34,500
Speaker 0: It's probably not going to work out for you.

919
01:07:36,480 --> 01:07:55,220
Speaker 0: But yeah, it's also I think all this library thing, it kind of makes learning to program sort of a disappointment in a lot of ways because back in the day, you'd learn to program and then when you went to go and program things, it was just like what you learned.

920
01:07:55,320 --> 01:07:59,449
Speaker 1: I'd make a bunch of data structures with like nested loops to solve a problem.

921
01:07:59,489 --> 01:08:04,560
Speaker 1: Nowadays, it's like import this Python library, run one function on the data set and I'm done.

922
01:08:05,441 --> 01:08:14,900
Speaker 0: You go to do something like Advent of Code or other programming competitions, like those remind you what you liked about programming, solving these fundamental computing problems.

923
01:08:16,182 --> 01:08:20,426
Speaker 0: Not necessarily a low level like machine code level, but an algorithmic level.

924
01:08:21,688 --> 01:08:31,040
Speaker 0: But the actual work of software engineering these days isn't done in the grand scheme, but all the foundational work is done.

925
01:08:31,600 --> 01:08:35,191
Speaker 0: Where only you never had to pour a foundation ever again.

926
01:08:35,270 --> 01:08:37,437
Speaker 0: All you do is put a house on top of a foundation.

927
01:08:37,477 --> 01:08:37,798
Speaker 0: That's it.

928
01:08:39,161 --> 01:08:54,920
Speaker 0: And it's a completely different exercise, mentally speaking, to glue functions together than it is to build algorithms and data structures from nothing.

929
01:08:55,921 --> 01:09:07,136
Speaker 0: And so I think even though we classify both those activities as programming, if you have fun doing one, you might not enjoy doing the other.

930
01:09:07,216 --> 01:09:09,520
Speaker 0: I certainly enjoy doing one more than the other.

931
01:09:10,461 --> 01:09:18,228
Speaker 0: And I think this is a large problem just in the grand scheme of programming culture.

932
01:09:18,247 --> 01:09:24,554
Speaker 0: The enjoyable hobby thing is not the useful thing.

933
01:09:24,573 --> 01:09:30,979
Speaker 0: You go out and get your job doing programming and all you're doing is gluing libraries together.

934
01:09:32,728 --> 01:09:34,216
Speaker 0: It's not what you had fun doing.

935
01:09:35,899 --> 01:09:44,013
Speaker 1: Not like professional training materials, but like if you're looking for help on a problem, a lot of tutorials and advice boil down to.

936
01:09:44,314 --> 01:09:46,277
Speaker 1: here is the copy paste of this library.

937
01:09:46,317 --> 01:09:47,800
Speaker 1: that's basically a black box to you.

938
01:09:48,661 --> 01:09:56,160
Speaker 1: Or you'll write a program that effectively just calls four different libraries in order without necessarily understanding the nuance of what those libraries are doing.

939
01:09:56,701 --> 01:10:01,471
Speaker 1: Not saying that's bad, but I'm saying that makes it easier to avoid learning fundamentals.

940
01:10:01,511 --> 01:10:05,720
Speaker 1: that will give you a huge advantage in terms of writing good code down the road.

941
01:10:07,361 --> 01:10:16,600
Speaker 0: And the final problem there is that the education we have for, you know, you go to get a computer science degree, at least when I got one, I'm pretty sure this is still the case.

942
01:10:19,160 --> 01:10:32,220
Speaker 0: They're not teaching you to glue libraries together, but even though that's what you're going to be doing at your job, most likely, they're teaching you the more fundamental parts that you're probably not going to do at your job, depending on what your job is.

943
01:10:32,500 --> 01:10:38,560
Speaker 1: Well, this is why computer science and computer engineering and software engineering are three basically completely different fields.

944
01:10:39,801 --> 01:10:51,700
Speaker 0: But you get people who are trained into a place where they learn some fundamental algorithms and things like that, but they got out of practice.

945
01:10:51,820 --> 01:10:53,844
Speaker 0: They don't actually do them, right?

946
01:10:54,145 --> 01:11:02,040
Speaker 0: And they've never, they've only ever done them in such a way as to like, you know, solve problems directly, like advent of code style, right?

947
01:11:02,441 --> 01:11:06,700
Speaker 0: And then they go and they work and they learn, they didn't learn how to glue libraries together.

948
01:11:06,881 --> 01:11:08,910
Speaker 0: They figure that out because it's not as hard.

949
01:11:08,930 --> 01:11:10,859
Speaker 0: If you can do one, you can learn the other.

950
01:11:11,681 --> 01:11:17,373
Speaker 0: But to learn to make a library when one is needed to be made, right?

951
01:11:17,733 --> 01:11:21,040
Speaker 0: It's like, that's not taught so much, right?

952
01:11:22,400 --> 01:11:34,740
Speaker 0: You know, you have in the people who can do that and do that well, write code that's good enough and solid enough that everyone else in the world can import and use your code in their programs, right?

953
01:11:35,261 --> 01:11:41,955
Speaker 0: That's what makes you like the next level, you know, S tier software, you know, programmer.

954
01:11:42,576 --> 01:11:44,620
Speaker 0: And they don't teach that, right?

955
01:11:44,680 --> 01:11:57,820
Speaker 0: It's like, you got to, you know, know both sides because you have to make something that is A on the fundamental side has to be really, really solid, secure, performant, does things the best possible way, right?

956
01:11:58,181 --> 01:12:00,566
Speaker 0: On the side no one looks at.

957
01:12:01,027 --> 01:12:02,832
Speaker 0: And on the front side, right?

958
01:12:02,852 --> 01:12:06,420
Speaker 0: It's like people are going to be taking your code and gluing it to other code.

959
01:12:07,021 --> 01:12:13,120
Speaker 0: You need to make your interface, your API well-designed such that it is nice to glue with.

960
01:12:13,320 --> 01:12:15,825
Speaker 1: That's a big thing in my day job.

961
01:12:15,865 --> 01:12:23,380
Speaker 1: A big part of my life is considering the UX, the user experience design of APIs specifically.

962
01:12:23,680 --> 01:12:32,559
Speaker 1: They have a UX just like a video game has a UX, just like a web page has a UX, an API has a UX, a library has a UX.

963
01:12:36,042 --> 01:12:41,040
Speaker 0: So yeah, if you weren't thinking about software libraries, that's pretty much all programmers think about.

964
01:12:41,981 --> 01:12:51,780
Speaker 0: And if you use, if you only use software, it's something you should think about a lot because your computer's got probably has more libraries installed on it than programs.

965
01:12:52,360 --> 01:12:54,900
Speaker 0: And your phone has more libraries installed on it.

966
01:12:54,900 --> 01:13:05,880
Speaker 1: And if you find you're trying to solve a problem with your computer by deleting or renaming or moving library files around, that's like trying to fix the problem I had with my car.

967
01:13:06,080 --> 01:13:06,543
Speaker 0: It's the year 2021/2.

968
01:13:06,543 --> 01:13:07,027
Speaker 0: Don't do that.

969
01:13:09,181 --> 01:13:16,040
Speaker 1: That would be like if I was trying to fix the problems I described at the start of the show with my car by rooting around in the transmission with a screwdriver and starting there.

970
01:13:17,564 --> 01:13:18,496
Speaker 0: Yeah, don't do that.

971
01:13:21,341 --> 01:13:23,587
Speaker 1: This has been Geek Nights with Rim and Scott.

972
01:13:23,627 --> 01:13:28,600
Speaker 1: Special thanks to DJ Pretzel for the opening music, Kat Lee for web design, and Brando K for the logos.

973
01:13:29,000 --> 01:13:34,020
Speaker 0: Be sure to visit our website at FrontRowCrew.com for show notes, discussion news, and more.

974
01:13:34,300 --> 01:13:36,968
Speaker 1: Remember, Geek Nights is not one, but four different shows.

975
01:13:37,088 --> 01:13:41,160
Speaker 1: Sci-Tech Mondays, Gaming Tuesdays, Anime Comic Wednesdays, and Indiscriminate Thursdays.

976
01:13:42,040 --> 01:13:45,216
Speaker 0: Geek Nights is distributed under a Creative Commons Attribution 3.0 license.

977
01:13:46,540 --> 01:13:49,570
Speaker 0: Geek Nights is recorded live with no studio and no audience.

978
01:13:49,751 --> 01:13:52,640
Speaker 0: But unlike those other late shows, it's actually recorded at night.

979
01:13:53,321 --> 01:14:03,020
Speaker 1: And the Patreon patrons on this episode of Geek Nights are Heidi McNichol, Alan Joyce, Lynne Kije, Dread Lily, Tenebrae, and a bunch of people who really don't want me to say their names.

980
01:14:03,340 --> 01:14:19,320
Speaker 1: Chris Haddad, Chris Reimer, Clinton Walton, Dex, Finn, Kishiai85, Rebecca Dunn, Reviewmadbull34, Cowards, Sam Erickson, Shervin Von Horrell, Taylor Braun, YouHoldTheKeyToMyHeart, and several individuals who do not want me to identify them at the end of the show.

981
01:14:20,001 --> 01:14:22,668
Speaker 1: So yeah, we skipped a bunch of episodes because of the holidays.

982
01:14:22,788 --> 01:14:27,540
Speaker 1: We'll probably skip a few more around the new year, and then we'll be right back on our bullshit.

983
01:14:27,540 --> 01:14:32,268
Speaker 1: 50/50 on if even one of us goes to PAX East for even one day.

984
01:14:33,190 --> 01:14:37,100
Speaker 1: But for now, stay safe out there, and I leave you simply with...

985
01:14:37,260 --> 01:14:39,499
Speaker 0: Fill this egg cup with your own sweat.

986
01:14:40,280 --> 01:14:41,240
Speaker 0: I know it's going to be weird, mate.

987
01:14:41,960 --> 01:14:42,799
Speaker 0: Most sweat wins.

988
01:14:43,641 --> 01:14:44,729
Speaker 0: You have 20 minutes.

989
01:14:44,749 --> 01:14:46,180
Speaker 0: Your time starts now.

